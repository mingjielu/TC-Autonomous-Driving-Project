{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map_profile/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ncustom_imports = dict(\n    imports=['my_hooks.profiler_hook'], allow_failed_imports=False)\ncustom_hooks = [\n    dict(\n        type='MyProfilerHook',\n        log_dir='./profiler_logs',\n        profile_step_start=60,\n        profile_step_end=62,\n        priority='NORMAL')\n]\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map_profile.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47021, "data_time": 1.01423, "track.frame_0_loss_cls_0": 1.2786, "track.frame_0_loss_bbox_0": 2.36396, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.26851, "track.frame_0_loss_bbox_1": 2.28871, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.28897, "track.frame_0_loss_bbox_2": 2.27694, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.24214, "track.frame_0_loss_bbox_3": 2.25029, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.22177, "track.frame_0_loss_bbox_4": 2.21112, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.24435, "track.frame_0_loss_bbox_5": 2.23054, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.62763, "track.frame_1_loss_bbox_0": 2.12394, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.68764, "track.frame_1_loss_bbox_1": 2.02913, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.69732, "track.frame_1_loss_bbox_2": 2.00396, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.71145, "track.frame_1_loss_bbox_3": 1.96648, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.68792, "track.frame_1_loss_bbox_4": 1.95927, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.73709, "track.frame_1_loss_bbox_5": 1.98127, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.65597, "track.frame_2_loss_bbox_0": 2.00601, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.59828, "track.frame_2_loss_bbox_1": 1.91492, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.6907, "track.frame_2_loss_bbox_2": 1.88103, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.66464, "track.frame_2_loss_bbox_3": 1.85543, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.6374, "track.frame_2_loss_bbox_4": 1.83167, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.62139, "track.frame_2_loss_bbox_5": 1.8362, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.86608, "track.frame_3_loss_bbox_0": 2.09489, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.67805, "track.frame_3_loss_bbox_1": 1.98284, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.7467, "track.frame_3_loss_bbox_2": 1.97055, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.77479, "track.frame_3_loss_bbox_3": 2.08028, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.8057, "track.frame_3_loss_bbox_4": 2.07779, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.7533, "track.frame_3_loss_bbox_5": 2.12257, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.8831, "track.frame_4_loss_bbox_0": 2.12339, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.79128, "track.frame_4_loss_bbox_1": 2.00886, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.74806, "track.frame_4_loss_bbox_2": 2.02317, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.65428, "track.frame_4_loss_bbox_3": 2.0227, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.59765, "track.frame_4_loss_bbox_4": 2.02138, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.65068, "track.frame_4_loss_bbox_5": 2.03618, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.2119, "map.loss_bbox": 1.78198, "map.loss_iou": 2.07785, "map.loss_mask_things": 1.79828, "map.loss_mask_stuff": 0.08823, "map.d0.loss_mask_things_f": 1.80872, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79345, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.79313, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80932, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08318, "map.d0.loss_cls_stuff_f": 0.13933, "map.d1.loss_mask_stuff_f": 0.11163, "map.d1.loss_cls_stuff_f": 0.13499, "map.d2.loss_mask_stuff_f": 0.07634, "map.d2.loss_cls_stuff_f": 0.1333, "map.d3.loss_mask_stuff_f": 0.08487, "map.d3.loss_cls_stuff_f": 0.12041, "map.d4.loss_mask_stuff_f": 0.0838, "map.d4.loss_cls_stuff_f": 0.14066, "map.d5.loss_mask_stuff_f": 0.09173, "map.d5.loss_cls_stuff_f": 0.15595, "map.d0.loss_cls": 1.69169, "map.d0.loss_bbox": 1.82124, "map.d0.loss_iou": 2.10495, "map.d1.loss_cls": 1.56292, "map.d1.loss_bbox": 1.80786, "map.d1.loss_iou": 2.09507, "map.d2.loss_cls": 1.27495, "map.d2.loss_bbox": 1.79802, "map.d2.loss_iou": 2.08631, "map.d3.loss_cls": 1.22345, "map.d3.loss_bbox": 1.79509, "map.d3.loss_iou": 2.08662, "map.d4.loss_cls": 1.24702, "map.d4.loss_bbox": 1.78357, "map.d4.loss_iou": 2.08007, "loss": 152.06483, "grad_norm": 2844.10148, "time": 11.81966}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47021, "data_time": 0.09871, "track.frame_0_loss_cls_0": 0.73342, "track.frame_0_loss_bbox_0": 1.95016, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.70734, "track.frame_0_loss_bbox_1": 1.88327, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.67594, "track.frame_0_loss_bbox_2": 1.85466, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.65174, "track.frame_0_loss_bbox_3": 1.83149, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.64477, "track.frame_0_loss_bbox_4": 1.81361, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.66137, "track.frame_0_loss_bbox_5": 1.79744, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.93778, "track.frame_1_loss_bbox_0": 1.95864, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.81323, "track.frame_1_loss_bbox_1": 1.87022, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.79831, "track.frame_1_loss_bbox_2": 1.83675, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.80178, "track.frame_1_loss_bbox_3": 1.8194, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.81005, "track.frame_1_loss_bbox_4": 1.79574, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.80584, "track.frame_1_loss_bbox_5": 1.77884, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.93779, "track.frame_2_loss_bbox_0": 1.98994, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.83843, "track.frame_2_loss_bbox_1": 1.92714, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.77047, "track.frame_2_loss_bbox_2": 1.88843, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.73871, "track.frame_2_loss_bbox_3": 1.87741, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.72485, "track.frame_2_loss_bbox_4": 1.86741, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.73988, "track.frame_2_loss_bbox_5": 1.86242, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.93002, "track.frame_3_loss_bbox_0": 2.08004, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.81037, "track.frame_3_loss_bbox_1": 1.98841, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.75272, "track.frame_3_loss_bbox_2": 1.9325, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.7456, "track.frame_3_loss_bbox_3": 1.90959, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.7382, "track.frame_3_loss_bbox_4": 1.89202, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.73119, "track.frame_3_loss_bbox_5": 1.8916, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.74905, "track.frame_4_loss_bbox_0": 1.99945, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.69773, "track.frame_4_loss_bbox_1": 1.94877, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.7035, "track.frame_4_loss_bbox_2": 1.90439, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.69799, "track.frame_4_loss_bbox_3": 1.8765, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.72121, "track.frame_4_loss_bbox_4": 1.85955, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.73337, "track.frame_4_loss_bbox_5": 1.82953, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.98021, "map.loss_bbox": 2.15108, "map.loss_iou": 2.0316, "map.loss_mask_things": 1.72559, "map.loss_mask_stuff": 0.08294, "map.d0.loss_mask_things_f": 1.74499, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.73012, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.70739, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70259, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08171, "map.d0.loss_cls_stuff_f": 0.00489, "map.d1.loss_mask_stuff_f": 0.08756, "map.d1.loss_cls_stuff_f": 0.0021, "map.d2.loss_mask_stuff_f": 0.07748, "map.d2.loss_cls_stuff_f": 0.00133, "map.d3.loss_mask_stuff_f": 0.08186, "map.d3.loss_cls_stuff_f": 0.00093, "map.d4.loss_mask_stuff_f": 0.08124, "map.d4.loss_cls_stuff_f": 0.00119, "map.d5.loss_mask_stuff_f": 0.08388, "map.d5.loss_cls_stuff_f": 0.00129, "map.d0.loss_cls": 1.41511, "map.d0.loss_bbox": 2.23382, "map.d0.loss_iou": 2.09688, "map.d1.loss_cls": 1.00308, "map.d1.loss_bbox": 2.20442, "map.d1.loss_iou": 2.09184, "map.d2.loss_cls": 0.92028, "map.d2.loss_bbox": 2.18002, "map.d2.loss_iou": 2.07309, "map.d3.loss_cls": 0.91931, "map.d3.loss_bbox": 2.17131, "map.d3.loss_iou": 2.05844, "map.d4.loss_cls": 0.98203, "map.d4.loss_bbox": 2.16674, "map.d4.loss_iou": 2.04583, "loss": 120.44213, "grad_norm": 460.5116, "time": 10.68147}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47116, "data_time": 0.09176, "track.frame_0_loss_cls_0": 0.64857, "track.frame_0_loss_bbox_0": 1.73127, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.65846, "track.frame_0_loss_bbox_1": 1.67532, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.65633, "track.frame_0_loss_bbox_2": 1.62286, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.65905, "track.frame_0_loss_bbox_3": 1.60159, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.66205, "track.frame_0_loss_bbox_4": 1.58974, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.66995, "track.frame_0_loss_bbox_5": 1.57155, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.65379, "track.frame_1_loss_bbox_0": 1.67229, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.66012, "track.frame_1_loss_bbox_1": 1.61441, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.65228, "track.frame_1_loss_bbox_2": 1.56831, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.6452, "track.frame_1_loss_bbox_3": 1.54898, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.65778, "track.frame_1_loss_bbox_4": 1.53493, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.65742, "track.frame_1_loss_bbox_5": 1.49883, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.66799, "track.frame_2_loss_bbox_0": 1.91565, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.64731, "track.frame_2_loss_bbox_1": 1.79076, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.62917, "track.frame_2_loss_bbox_2": 1.75714, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.63309, "track.frame_2_loss_bbox_3": 1.74015, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.64238, "track.frame_2_loss_bbox_4": 1.72572, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.64533, "track.frame_2_loss_bbox_5": 1.71485, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.62347, "track.frame_3_loss_bbox_0": 1.60047, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.62522, "track.frame_3_loss_bbox_1": 1.51321, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.59045, "track.frame_3_loss_bbox_2": 1.47344, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.58675, "track.frame_3_loss_bbox_3": 1.45205, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.58889, "track.frame_3_loss_bbox_4": 1.42978, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.58925, "track.frame_3_loss_bbox_5": 1.42662, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.66859, "track.frame_4_loss_bbox_0": 1.5749, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.64369, "track.frame_4_loss_bbox_1": 1.50304, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.63263, "track.frame_4_loss_bbox_2": 1.4726, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.61884, "track.frame_4_loss_bbox_3": 1.46263, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.61174, "track.frame_4_loss_bbox_4": 1.44772, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.61909, "track.frame_4_loss_bbox_5": 1.42963, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97259, "map.loss_bbox": 1.77459, "map.loss_iou": 1.88199, "map.loss_mask_things": 1.73061, "map.loss_mask_stuff": 0.04573, "map.d0.loss_mask_things_f": 1.76581, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.75273, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.72435, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.74814, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05879, "map.d0.loss_cls_stuff_f": 0.00026, "map.d1.loss_mask_stuff_f": 0.05512, "map.d1.loss_cls_stuff_f": 0.00017, "map.d2.loss_mask_stuff_f": 0.04904, "map.d2.loss_cls_stuff_f": 0.00016, "map.d3.loss_mask_stuff_f": 0.05861, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.04855, "map.d4.loss_cls_stuff_f": 0.00017, "map.d5.loss_mask_stuff_f": 0.05613, "map.d5.loss_cls_stuff_f": 0.00024, "map.d0.loss_cls": 1.19588, "map.d0.loss_bbox": 1.8491, "map.d0.loss_iou": 1.92818, "map.d1.loss_cls": 0.90458, "map.d1.loss_bbox": 1.82756, "map.d1.loss_iou": 1.92086, "map.d2.loss_cls": 0.90088, "map.d2.loss_bbox": 1.80467, "map.d2.loss_iou": 1.89643, "map.d3.loss_cls": 0.94197, "map.d3.loss_bbox": 1.79472, "map.d3.loss_iou": 1.8865, "map.d4.loss_cls": 0.9652, "map.d4.loss_bbox": 1.78161, "map.d4.loss_iou": 1.87947, "loss": 104.00686, "grad_norm": 258.12644, "time": 10.73781}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47116, "data_time": 0.09163, "track.frame_0_loss_cls_0": 0.56238, "track.frame_0_loss_bbox_0": 1.5555, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.55193, "track.frame_0_loss_bbox_1": 1.4507, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.52768, "track.frame_0_loss_bbox_2": 1.43131, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.51778, "track.frame_0_loss_bbox_3": 1.44523, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.51488, "track.frame_0_loss_bbox_4": 1.4287, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.52944, "track.frame_0_loss_bbox_5": 1.41278, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.53667, "track.frame_1_loss_bbox_0": 1.59365, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.52067, "track.frame_1_loss_bbox_1": 1.46594, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.49959, "track.frame_1_loss_bbox_2": 1.43217, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.50883, "track.frame_1_loss_bbox_3": 1.41351, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.50081, "track.frame_1_loss_bbox_4": 1.39663, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.50287, "track.frame_1_loss_bbox_5": 1.3925, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.55078, "track.frame_2_loss_bbox_0": 1.457, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.53992, "track.frame_2_loss_bbox_1": 1.35128, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.52158, "track.frame_2_loss_bbox_2": 1.30316, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.51148, "track.frame_2_loss_bbox_3": 1.27688, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.50275, "track.frame_2_loss_bbox_4": 1.28126, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.51505, "track.frame_2_loss_bbox_5": 1.25755, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.53784, "track.frame_3_loss_bbox_0": 1.37502, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.49716, "track.frame_3_loss_bbox_1": 1.28207, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.49571, "track.frame_3_loss_bbox_2": 1.25064, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.48938, "track.frame_3_loss_bbox_3": 1.25842, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.48247, "track.frame_3_loss_bbox_4": 1.25045, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.47793, "track.frame_3_loss_bbox_5": 1.24904, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.57356, "track.frame_4_loss_bbox_0": 1.4781, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.53025, "track.frame_4_loss_bbox_1": 1.34088, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.50158, "track.frame_4_loss_bbox_2": 1.28852, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.48903, "track.frame_4_loss_bbox_3": 1.27998, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.49902, "track.frame_4_loss_bbox_4": 1.26221, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.51121, "track.frame_4_loss_bbox_5": 1.25337, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.93014, "map.loss_bbox": 1.99929, "map.loss_iou": 2.01209, "map.loss_mask_things": 1.68315, "map.loss_mask_stuff": 0.07959, "map.d0.loss_mask_things_f": 1.70539, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70829, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.68495, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68619, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06304, "map.d0.loss_cls_stuff_f": 0.00024, "map.d1.loss_mask_stuff_f": 0.06385, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.0615, "map.d2.loss_cls_stuff_f": 0.00017, "map.d3.loss_mask_stuff_f": 0.07743, "map.d3.loss_cls_stuff_f": 0.00014, "map.d4.loss_mask_stuff_f": 0.06745, "map.d4.loss_cls_stuff_f": 0.00022, "map.d5.loss_mask_stuff_f": 0.06274, "map.d5.loss_cls_stuff_f": 0.00037, "map.d0.loss_cls": 0.95811, "map.d0.loss_bbox": 2.09051, "map.d0.loss_iou": 2.10058, "map.d1.loss_cls": 0.90179, "map.d1.loss_bbox": 2.04614, "map.d1.loss_iou": 2.06812, "map.d2.loss_cls": 0.91396, "map.d2.loss_bbox": 2.02275, "map.d2.loss_iou": 2.04544, "map.d3.loss_cls": 0.89542, "map.d3.loss_bbox": 2.02551, "map.d3.loss_iou": 2.03565, "map.d4.loss_cls": 0.93195, "map.d4.loss_bbox": 2.00512, "map.d4.loss_iou": 2.03082, "loss": 95.37297, "grad_norm": 333.46764, "time": 10.70694}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 47116, "data_time": 0.09292, "track.frame_0_loss_cls_0": 0.56846, "track.frame_0_loss_bbox_0": 1.44053, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.60591, "track.frame_0_loss_bbox_1": 1.32115, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.60362, "track.frame_0_loss_bbox_2": 1.30503, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.59589, "track.frame_0_loss_bbox_3": 1.2869, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.60279, "track.frame_0_loss_bbox_4": 1.26459, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.60559, "track.frame_0_loss_bbox_5": 1.26979, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.58731, "track.frame_1_loss_bbox_0": 1.51475, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.61849, "track.frame_1_loss_bbox_1": 1.4142, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.59761, "track.frame_1_loss_bbox_2": 1.38573, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.59644, "track.frame_1_loss_bbox_3": 1.37629, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.56962, "track.frame_1_loss_bbox_4": 1.36578, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.56872, "track.frame_1_loss_bbox_5": 1.37043, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.61884, "track.frame_2_loss_bbox_0": 1.63183, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.58084, "track.frame_2_loss_bbox_1": 1.47402, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.56527, "track.frame_2_loss_bbox_2": 1.42822, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.567, "track.frame_2_loss_bbox_3": 1.41533, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.55464, "track.frame_2_loss_bbox_4": 1.39553, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.55536, "track.frame_2_loss_bbox_5": 1.39128, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.57473, "track.frame_3_loss_bbox_0": 1.56112, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.57771, "track.frame_3_loss_bbox_1": 1.4249, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.57455, "track.frame_3_loss_bbox_2": 1.39029, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.5799, "track.frame_3_loss_bbox_3": 1.36967, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.57295, "track.frame_3_loss_bbox_4": 1.33581, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.57126, "track.frame_3_loss_bbox_5": 1.34173, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.51806, "track.frame_4_loss_bbox_0": 1.60171, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.544, "track.frame_4_loss_bbox_1": 1.42149, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.55208, "track.frame_4_loss_bbox_2": 1.38209, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.52907, "track.frame_4_loss_bbox_3": 1.37096, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.53775, "track.frame_4_loss_bbox_4": 1.35664, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.53885, "track.frame_4_loss_bbox_5": 1.36055, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97994, "map.loss_bbox": 2.15444, "map.loss_iou": 1.76624, "map.loss_mask_things": 1.59593, "map.loss_mask_stuff": 0.08475, "map.d0.loss_mask_things_f": 1.63009, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.63992, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.62441, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.61837, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08133, "map.d0.loss_cls_stuff_f": 0.00034, "map.d1.loss_mask_stuff_f": 0.08132, "map.d1.loss_cls_stuff_f": 0.00023, "map.d2.loss_mask_stuff_f": 0.08051, "map.d2.loss_cls_stuff_f": 0.00024, "map.d3.loss_mask_stuff_f": 0.09888, "map.d3.loss_cls_stuff_f": 0.00027, "map.d4.loss_mask_stuff_f": 0.09081, "map.d4.loss_cls_stuff_f": 0.00032, "map.d5.loss_mask_stuff_f": 0.08317, "map.d5.loss_cls_stuff_f": 0.00036, "map.d0.loss_cls": 0.89895, "map.d0.loss_bbox": 2.19882, "map.d0.loss_iou": 1.81849, "map.d1.loss_cls": 0.89987, "map.d1.loss_bbox": 2.188, "map.d1.loss_iou": 1.79178, "map.d2.loss_cls": 0.93034, "map.d2.loss_bbox": 2.16245, "map.d2.loss_iou": 1.76264, "map.d3.loss_cls": 0.94338, "map.d3.loss_bbox": 2.15031, "map.d3.loss_iou": 1.76708, "map.d4.loss_cls": 0.97291, "map.d4.loss_bbox": 2.13639, "map.d4.loss_iou": 1.7615, "loss": 97.19639, "grad_norm": 379.31693, "time": 10.6298}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 47264, "data_time": 0.09923, "track.frame_0_loss_cls_0": 0.53412, "track.frame_0_loss_bbox_0": 1.20823, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.52525, "track.frame_0_loss_bbox_1": 1.05778, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.50584, "track.frame_0_loss_bbox_2": 1.00179, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.49976, "track.frame_0_loss_bbox_3": 0.99328, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.50655, "track.frame_0_loss_bbox_4": 0.97986, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.51035, "track.frame_0_loss_bbox_5": 0.9855, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.51911, "track.frame_1_loss_bbox_0": 1.19169, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.5247, "track.frame_1_loss_bbox_1": 1.06632, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.50522, "track.frame_1_loss_bbox_2": 1.01642, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.4848, "track.frame_1_loss_bbox_3": 1.01149, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.48049, "track.frame_1_loss_bbox_4": 1.01989, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.48484, "track.frame_1_loss_bbox_5": 1.01428, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.51825, "track.frame_2_loss_bbox_0": 1.08894, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.49385, "track.frame_2_loss_bbox_1": 0.94835, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.4755, "track.frame_2_loss_bbox_2": 0.89008, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.46216, "track.frame_2_loss_bbox_3": 0.8682, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.45609, "track.frame_2_loss_bbox_4": 0.86668, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.46438, "track.frame_2_loss_bbox_5": 0.86328, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.47488, "track.frame_3_loss_bbox_0": 1.13693, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.46408, "track.frame_3_loss_bbox_1": 1.01443, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.4483, "track.frame_3_loss_bbox_2": 0.95994, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.4342, "track.frame_3_loss_bbox_3": 0.93687, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.4278, "track.frame_3_loss_bbox_4": 0.93643, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.4377, "track.frame_3_loss_bbox_5": 0.91947, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.51925, "track.frame_4_loss_bbox_0": 1.20765, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.49134, "track.frame_4_loss_bbox_1": 1.12735, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.47644, "track.frame_4_loss_bbox_2": 1.09809, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.46988, "track.frame_4_loss_bbox_3": 1.07984, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.47659, "track.frame_4_loss_bbox_4": 1.0737, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.47116, "track.frame_4_loss_bbox_5": 1.07499, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.9673, "map.loss_bbox": 2.02425, "map.loss_iou": 1.81409, "map.loss_mask_things": 1.62625, "map.loss_mask_stuff": 0.06589, "map.d0.loss_mask_things_f": 1.66261, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.67761, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.63755, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.64475, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05761, "map.d0.loss_cls_stuff_f": 0.00023, "map.d1.loss_mask_stuff_f": 0.05415, "map.d1.loss_cls_stuff_f": 0.00015, "map.d2.loss_mask_stuff_f": 0.05231, "map.d2.loss_cls_stuff_f": 0.00021, "map.d3.loss_mask_stuff_f": 0.05891, "map.d3.loss_cls_stuff_f": 0.00021, "map.d4.loss_mask_stuff_f": 0.0552, "map.d4.loss_cls_stuff_f": 0.00022, "map.d5.loss_mask_stuff_f": 0.05373, "map.d5.loss_cls_stuff_f": 0.00022, "map.d0.loss_cls": 0.8065, "map.d0.loss_bbox": 2.11302, "map.d0.loss_iou": 1.97928, "map.d1.loss_cls": 0.81536, "map.d1.loss_bbox": 2.07548, "map.d1.loss_iou": 1.91825, "map.d2.loss_cls": 0.89413, "map.d2.loss_bbox": 2.03515, "map.d2.loss_iou": 1.86885, "map.d3.loss_cls": 0.97027, "map.d3.loss_bbox": 2.0346, "map.d3.loss_iou": 1.83543, "map.d4.loss_cls": 0.9508, "map.d4.loss_bbox": 2.01998, "map.d4.loss_iou": 1.81978, "loss": 82.77094, "grad_norm": 250.05905, "time": 10.76219}
