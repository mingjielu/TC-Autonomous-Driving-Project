{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map_profile/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ncustom_imports = dict(\n    imports=['my_hooks.profiler_hook'], allow_failed_imports=False)\ncustom_hooks = [\n    dict(\n        type='MyProfilerHook',\n        log_dir='./profiler_logs',\n        profile_step_start=60,\n        profile_step_end=62,\n        priority='NORMAL')\n]\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map_profile.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47021, "data_time": 1.0081, "track.frame_0_loss_cls_0": 1.27896, "track.frame_0_loss_bbox_0": 2.36384, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.269, "track.frame_0_loss_bbox_1": 2.28865, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.28965, "track.frame_0_loss_bbox_2": 2.27687, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.2424, "track.frame_0_loss_bbox_3": 2.25023, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.22194, "track.frame_0_loss_bbox_4": 2.21107, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.24459, "track.frame_0_loss_bbox_5": 2.23051, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.62805, "track.frame_1_loss_bbox_0": 2.12391, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.68817, "track.frame_1_loss_bbox_1": 2.02903, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.69814, "track.frame_1_loss_bbox_2": 2.00391, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.71245, "track.frame_1_loss_bbox_3": 1.96646, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.6888, "track.frame_1_loss_bbox_4": 1.95922, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.73797, "track.frame_1_loss_bbox_5": 1.9812, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.65635, "track.frame_2_loss_bbox_0": 2.00555, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.599, "track.frame_2_loss_bbox_1": 1.9148, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.69266, "track.frame_2_loss_bbox_2": 1.88032, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.66586, "track.frame_2_loss_bbox_3": 1.85533, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.63855, "track.frame_2_loss_bbox_4": 1.83151, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.62299, "track.frame_2_loss_bbox_5": 1.83625, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.8656, "track.frame_3_loss_bbox_0": 2.09437, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.67991, "track.frame_3_loss_bbox_1": 1.98162, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.74696, "track.frame_3_loss_bbox_2": 1.97108, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.77426, "track.frame_3_loss_bbox_3": 2.08013, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.80615, "track.frame_3_loss_bbox_4": 2.07755, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.75267, "track.frame_3_loss_bbox_5": 2.12553, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.88256, "track.frame_4_loss_bbox_0": 2.12395, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.7927, "track.frame_4_loss_bbox_1": 2.00898, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.74883, "track.frame_4_loss_bbox_2": 2.02394, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.65484, "track.frame_4_loss_bbox_3": 2.02256, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.5977, "track.frame_4_loss_bbox_4": 2.02122, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.65077, "track.frame_4_loss_bbox_5": 2.03603, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.21212, "map.loss_bbox": 1.78202, "map.loss_iou": 2.07787, "map.loss_mask_things": 1.79831, "map.loss_mask_stuff": 0.08824, "map.d0.loss_mask_things_f": 1.80876, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79349, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.79319, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80945, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08319, "map.d0.loss_cls_stuff_f": 0.13935, "map.d1.loss_mask_stuff_f": 0.11163, "map.d1.loss_cls_stuff_f": 0.13501, "map.d2.loss_mask_stuff_f": 0.07635, "map.d2.loss_cls_stuff_f": 0.13331, "map.d3.loss_mask_stuff_f": 0.08487, "map.d3.loss_cls_stuff_f": 0.12042, "map.d4.loss_mask_stuff_f": 0.0838, "map.d4.loss_cls_stuff_f": 0.14067, "map.d5.loss_mask_stuff_f": 0.09174, "map.d5.loss_cls_stuff_f": 0.15596, "map.d0.loss_cls": 1.69179, "map.d0.loss_bbox": 1.82125, "map.d0.loss_iou": 2.10495, "map.d1.loss_cls": 1.56314, "map.d1.loss_bbox": 1.80787, "map.d1.loss_iou": 2.09508, "map.d2.loss_cls": 1.27505, "map.d2.loss_bbox": 1.79803, "map.d2.loss_iou": 2.08632, "map.d3.loss_cls": 1.22324, "map.d3.loss_bbox": 1.79561, "map.d3.loss_iou": 2.08639, "map.d4.loss_cls": 1.2455, "map.d4.loss_bbox": 1.78379, "map.d4.loss_iou": 2.08163, "loss": 152.08349, "grad_norm": 2868.8173, "time": 11.23446}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47021, "data_time": 0.09767, "track.frame_0_loss_cls_0": 0.73326, "track.frame_0_loss_bbox_0": 1.94972, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.70663, "track.frame_0_loss_bbox_1": 1.88282, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.67578, "track.frame_0_loss_bbox_2": 1.85337, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.65125, "track.frame_0_loss_bbox_3": 1.83041, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.64421, "track.frame_0_loss_bbox_4": 1.81264, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.66083, "track.frame_0_loss_bbox_5": 1.79674, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.93836, "track.frame_1_loss_bbox_0": 1.95759, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.81204, "track.frame_1_loss_bbox_1": 1.87037, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.79834, "track.frame_1_loss_bbox_2": 1.83507, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.80312, "track.frame_1_loss_bbox_3": 1.81404, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.80443, "track.frame_1_loss_bbox_4": 1.79776, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.80491, "track.frame_1_loss_bbox_5": 1.77678, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.93331, "track.frame_2_loss_bbox_0": 1.99333, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.84018, "track.frame_2_loss_bbox_1": 1.92273, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.77145, "track.frame_2_loss_bbox_2": 1.88234, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.73984, "track.frame_2_loss_bbox_3": 1.87511, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.72521, "track.frame_2_loss_bbox_4": 1.86649, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.74091, "track.frame_2_loss_bbox_5": 1.86044, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.92546, "track.frame_3_loss_bbox_0": 2.07271, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.80699, "track.frame_3_loss_bbox_1": 1.98059, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.75257, "track.frame_3_loss_bbox_2": 1.92234, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.74263, "track.frame_3_loss_bbox_3": 1.90626, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.73695, "track.frame_3_loss_bbox_4": 1.88524, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.72959, "track.frame_3_loss_bbox_5": 1.88549, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.74973, "track.frame_4_loss_bbox_0": 1.98889, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.69951, "track.frame_4_loss_bbox_1": 1.93832, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.70246, "track.frame_4_loss_bbox_2": 1.89292, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.70109, "track.frame_4_loss_bbox_3": 1.86131, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.72169, "track.frame_4_loss_bbox_4": 1.84811, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.73104, "track.frame_4_loss_bbox_5": 1.82025, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97811, "map.loss_bbox": 2.15263, "map.loss_iou": 2.03188, "map.loss_mask_things": 1.71638, "map.loss_mask_stuff": 0.08318, "map.d0.loss_mask_things_f": 1.74482, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.73044, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.70755, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70273, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08174, "map.d0.loss_cls_stuff_f": 0.00492, "map.d1.loss_mask_stuff_f": 0.08781, "map.d1.loss_cls_stuff_f": 0.00211, "map.d2.loss_mask_stuff_f": 0.07754, "map.d2.loss_cls_stuff_f": 0.00135, "map.d3.loss_mask_stuff_f": 0.08195, "map.d3.loss_cls_stuff_f": 0.00093, "map.d4.loss_mask_stuff_f": 0.08127, "map.d4.loss_cls_stuff_f": 0.0012, "map.d5.loss_mask_stuff_f": 0.08369, "map.d5.loss_cls_stuff_f": 0.00131, "map.d0.loss_cls": 1.42145, "map.d0.loss_bbox": 2.22908, "map.d0.loss_iou": 2.09561, "map.d1.loss_cls": 1.00074, "map.d1.loss_bbox": 2.20728, "map.d1.loss_iou": 2.0917, "map.d2.loss_cls": 0.91924, "map.d2.loss_bbox": 2.18148, "map.d2.loss_iou": 2.07315, "map.d3.loss_cls": 0.91915, "map.d3.loss_bbox": 2.1721, "map.d3.loss_iou": 2.05866, "map.d4.loss_cls": 0.98224, "map.d4.loss_bbox": 2.16673, "map.d4.loss_iou": 2.04583, "loss": 120.282, "grad_norm": 457.54865, "time": 10.18997}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47115, "data_time": 0.10078, "track.frame_0_loss_cls_0": 0.64946, "track.frame_0_loss_bbox_0": 1.75654, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.66516, "track.frame_0_loss_bbox_1": 1.70204, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.66035, "track.frame_0_loss_bbox_2": 1.65142, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.67623, "track.frame_0_loss_bbox_3": 1.61522, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.67739, "track.frame_0_loss_bbox_4": 1.5968, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.68214, "track.frame_0_loss_bbox_5": 1.58443, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.65533, "track.frame_1_loss_bbox_0": 1.71596, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.66253, "track.frame_1_loss_bbox_1": 1.66784, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.65348, "track.frame_1_loss_bbox_2": 1.64216, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.65878, "track.frame_1_loss_bbox_3": 1.61206, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.66099, "track.frame_1_loss_bbox_4": 1.59551, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.6621, "track.frame_1_loss_bbox_5": 1.56791, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.66984, "track.frame_2_loss_bbox_0": 1.93044, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.64342, "track.frame_2_loss_bbox_1": 1.81391, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.6395, "track.frame_2_loss_bbox_2": 1.78604, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.63148, "track.frame_2_loss_bbox_3": 1.76427, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.64233, "track.frame_2_loss_bbox_4": 1.73857, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.64412, "track.frame_2_loss_bbox_5": 1.72688, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.62759, "track.frame_3_loss_bbox_0": 1.59849, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.62673, "track.frame_3_loss_bbox_1": 1.51059, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.59503, "track.frame_3_loss_bbox_2": 1.47593, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.60466, "track.frame_3_loss_bbox_3": 1.44796, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.59607, "track.frame_3_loss_bbox_4": 1.42757, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.59856, "track.frame_3_loss_bbox_5": 1.42129, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.66935, "track.frame_4_loss_bbox_0": 1.57804, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.63236, "track.frame_4_loss_bbox_1": 1.50072, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.62055, "track.frame_4_loss_bbox_2": 1.46395, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.60819, "track.frame_4_loss_bbox_3": 1.44944, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.60193, "track.frame_4_loss_bbox_4": 1.43904, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.61025, "track.frame_4_loss_bbox_5": 1.42588, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.9713, "map.loss_bbox": 1.77149, "map.loss_iou": 1.88148, "map.loss_mask_things": 1.72697, "map.loss_mask_stuff": 0.04581, "map.d0.loss_mask_things_f": 1.76469, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.75198, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.72687, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.7443, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05929, "map.d0.loss_cls_stuff_f": 0.00027, "map.d1.loss_mask_stuff_f": 0.05526, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.04804, "map.d2.loss_cls_stuff_f": 0.00016, "map.d3.loss_mask_stuff_f": 0.05953, "map.d3.loss_cls_stuff_f": 0.00016, "map.d4.loss_mask_stuff_f": 0.04798, "map.d4.loss_cls_stuff_f": 0.00017, "map.d5.loss_mask_stuff_f": 0.05602, "map.d5.loss_cls_stuff_f": 0.00025, "map.d0.loss_cls": 1.18773, "map.d0.loss_bbox": 1.84818, "map.d0.loss_iou": 1.93676, "map.d1.loss_cls": 0.89768, "map.d1.loss_bbox": 1.82422, "map.d1.loss_iou": 1.9258, "map.d2.loss_cls": 0.89347, "map.d2.loss_bbox": 1.80599, "map.d2.loss_iou": 1.90357, "map.d3.loss_cls": 0.93959, "map.d3.loss_bbox": 1.78654, "map.d3.loss_iou": 1.88911, "map.d4.loss_cls": 0.96717, "map.d4.loss_bbox": 1.78105, "map.d4.loss_iou": 1.87883, "loss": 104.6107, "grad_norm": 276.17554, "time": 10.19914}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47115, "data_time": 0.09103, "track.frame_0_loss_cls_0": 0.54466, "track.frame_0_loss_bbox_0": 1.54473, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.53964, "track.frame_0_loss_bbox_1": 1.44536, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.53163, "track.frame_0_loss_bbox_2": 1.42339, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.51229, "track.frame_0_loss_bbox_3": 1.42145, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.51787, "track.frame_0_loss_bbox_4": 1.40581, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.53178, "track.frame_0_loss_bbox_5": 1.39365, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.51552, "track.frame_1_loss_bbox_0": 1.63014, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.50368, "track.frame_1_loss_bbox_1": 1.50842, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.48234, "track.frame_1_loss_bbox_2": 1.46766, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.47687, "track.frame_1_loss_bbox_3": 1.4562, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.48255, "track.frame_1_loss_bbox_4": 1.44008, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.48756, "track.frame_1_loss_bbox_5": 1.43861, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.54375, "track.frame_2_loss_bbox_0": 1.43975, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.52118, "track.frame_2_loss_bbox_1": 1.34755, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.53754, "track.frame_2_loss_bbox_2": 1.3081, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.52678, "track.frame_2_loss_bbox_3": 1.28893, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.51257, "track.frame_2_loss_bbox_4": 1.28957, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.52431, "track.frame_2_loss_bbox_5": 1.26995, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.53494, "track.frame_3_loss_bbox_0": 1.38116, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.4991, "track.frame_3_loss_bbox_1": 1.25943, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.49009, "track.frame_3_loss_bbox_2": 1.21932, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.48819, "track.frame_3_loss_bbox_3": 1.21395, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.49027, "track.frame_3_loss_bbox_4": 1.20045, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.47801, "track.frame_3_loss_bbox_5": 1.19565, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.54275, "track.frame_4_loss_bbox_0": 1.43883, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.52601, "track.frame_4_loss_bbox_1": 1.33445, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.51551, "track.frame_4_loss_bbox_2": 1.29969, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.49274, "track.frame_4_loss_bbox_3": 1.29884, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.49274, "track.frame_4_loss_bbox_4": 1.2925, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.49927, "track.frame_4_loss_bbox_5": 1.29554, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.93325, "map.loss_bbox": 1.99973, "map.loss_iou": 2.01885, "map.loss_mask_things": 1.68061, "map.loss_mask_stuff": 0.08425, "map.d0.loss_mask_things_f": 1.70625, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70268, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.67968, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68504, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06462, "map.d0.loss_cls_stuff_f": 0.00025, "map.d1.loss_mask_stuff_f": 0.06917, "map.d1.loss_cls_stuff_f": 0.00019, "map.d2.loss_mask_stuff_f": 0.06423, "map.d2.loss_cls_stuff_f": 0.00019, "map.d3.loss_mask_stuff_f": 0.08003, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.07085, "map.d4.loss_cls_stuff_f": 0.00023, "map.d5.loss_mask_stuff_f": 0.06474, "map.d5.loss_cls_stuff_f": 0.0004, "map.d0.loss_cls": 0.96483, "map.d0.loss_bbox": 2.08642, "map.d0.loss_iou": 2.09979, "map.d1.loss_cls": 0.87921, "map.d1.loss_bbox": 2.04512, "map.d1.loss_iou": 2.0775, "map.d2.loss_cls": 0.89939, "map.d2.loss_bbox": 2.0202, "map.d2.loss_iou": 2.04806, "map.d3.loss_cls": 0.8878, "map.d3.loss_bbox": 2.015, "map.d3.loss_iou": 2.04114, "map.d4.loss_cls": 0.93755, "map.d4.loss_bbox": 2.01481, "map.d4.loss_iou": 2.02664, "loss": 95.24016, "grad_norm": 371.70864, "time": 10.19478}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 47115, "data_time": 0.09224, "track.frame_0_loss_cls_0": 0.54726, "track.frame_0_loss_bbox_0": 1.44528, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.59123, "track.frame_0_loss_bbox_1": 1.3306, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.61954, "track.frame_0_loss_bbox_2": 1.27727, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.58528, "track.frame_0_loss_bbox_3": 1.2823, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.57241, "track.frame_0_loss_bbox_4": 1.26415, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.58182, "track.frame_0_loss_bbox_5": 1.28122, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.58768, "track.frame_1_loss_bbox_0": 1.5699, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.64704, "track.frame_1_loss_bbox_1": 1.39405, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.63306, "track.frame_1_loss_bbox_2": 1.36141, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.63557, "track.frame_1_loss_bbox_3": 1.33235, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.6109, "track.frame_1_loss_bbox_4": 1.32472, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.60239, "track.frame_1_loss_bbox_5": 1.33375, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.58548, "track.frame_2_loss_bbox_0": 1.61833, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.5774, "track.frame_2_loss_bbox_1": 1.48993, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.57813, "track.frame_2_loss_bbox_2": 1.44709, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.57011, "track.frame_2_loss_bbox_3": 1.43559, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.56233, "track.frame_2_loss_bbox_4": 1.42818, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.57578, "track.frame_2_loss_bbox_5": 1.41542, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.56765, "track.frame_3_loss_bbox_0": 1.55759, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.56153, "track.frame_3_loss_bbox_1": 1.40343, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.5533, "track.frame_3_loss_bbox_2": 1.37262, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.55092, "track.frame_3_loss_bbox_3": 1.36644, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.53146, "track.frame_3_loss_bbox_4": 1.35644, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.5486, "track.frame_3_loss_bbox_5": 1.34398, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.54075, "track.frame_4_loss_bbox_0": 1.57788, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.54205, "track.frame_4_loss_bbox_1": 1.41698, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.53584, "track.frame_4_loss_bbox_2": 1.39779, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.5367, "track.frame_4_loss_bbox_3": 1.37186, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.52658, "track.frame_4_loss_bbox_4": 1.35437, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.53152, "track.frame_4_loss_bbox_5": 1.35813, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.96073, "map.loss_bbox": 2.13771, "map.loss_iou": 1.77113, "map.loss_mask_things": 1.59537, "map.loss_mask_stuff": 0.08685, "map.d0.loss_mask_things_f": 1.63881, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.62628, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.61403, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.61519, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08034, "map.d0.loss_cls_stuff_f": 0.00033, "map.d1.loss_mask_stuff_f": 0.08303, "map.d1.loss_cls_stuff_f": 0.00023, "map.d2.loss_mask_stuff_f": 0.08057, "map.d2.loss_cls_stuff_f": 0.00027, "map.d3.loss_mask_stuff_f": 0.09992, "map.d3.loss_cls_stuff_f": 0.00027, "map.d4.loss_mask_stuff_f": 0.09136, "map.d4.loss_cls_stuff_f": 0.00032, "map.d5.loss_mask_stuff_f": 0.08628, "map.d5.loss_cls_stuff_f": 0.00036, "map.d0.loss_cls": 0.88714, "map.d0.loss_bbox": 2.20326, "map.d0.loss_iou": 1.80709, "map.d1.loss_cls": 0.87427, "map.d1.loss_bbox": 2.1863, "map.d1.loss_iou": 1.78598, "map.d2.loss_cls": 0.89848, "map.d2.loss_bbox": 2.16562, "map.d2.loss_iou": 1.76859, "map.d3.loss_cls": 0.92664, "map.d3.loss_bbox": 2.15252, "map.d3.loss_iou": 1.76273, "map.d4.loss_cls": 0.95295, "map.d4.loss_bbox": 2.13564, "map.d4.loss_iou": 1.76727, "loss": 96.94322, "grad_norm": 400.72624, "time": 10.09174}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 47247, "data_time": 0.09796, "track.frame_0_loss_cls_0": 0.53251, "track.frame_0_loss_bbox_0": 1.2773, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.552, "track.frame_0_loss_bbox_1": 1.13337, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.52805, "track.frame_0_loss_bbox_2": 1.08113, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.51002, "track.frame_0_loss_bbox_3": 1.07038, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.50714, "track.frame_0_loss_bbox_4": 1.06409, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.51054, "track.frame_0_loss_bbox_5": 1.06868, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.5119, "track.frame_1_loss_bbox_0": 1.23498, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.51687, "track.frame_1_loss_bbox_1": 1.09734, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.4962, "track.frame_1_loss_bbox_2": 1.05484, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.48674, "track.frame_1_loss_bbox_3": 1.05522, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.49252, "track.frame_1_loss_bbox_4": 1.05101, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.48847, "track.frame_1_loss_bbox_5": 1.05393, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.4973, "track.frame_2_loss_bbox_0": 1.118, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.47727, "track.frame_2_loss_bbox_1": 0.94505, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.45145, "track.frame_2_loss_bbox_2": 0.90914, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.43665, "track.frame_2_loss_bbox_3": 0.90196, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.43947, "track.frame_2_loss_bbox_4": 0.89948, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.45223, "track.frame_2_loss_bbox_5": 0.88251, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.4759, "track.frame_3_loss_bbox_0": 1.15581, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.47983, "track.frame_3_loss_bbox_1": 1.04049, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.46951, "track.frame_3_loss_bbox_2": 0.99257, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.46258, "track.frame_3_loss_bbox_3": 0.98656, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.45493, "track.frame_3_loss_bbox_4": 0.97751, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.45537, "track.frame_3_loss_bbox_5": 0.97517, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.47525, "track.frame_4_loss_bbox_0": 1.20199, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.45396, "track.frame_4_loss_bbox_1": 1.10789, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.43196, "track.frame_4_loss_bbox_2": 1.10313, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.43645, "track.frame_4_loss_bbox_3": 1.06938, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.44373, "track.frame_4_loss_bbox_4": 1.05781, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.45369, "track.frame_4_loss_bbox_5": 1.04576, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.96368, "map.loss_bbox": 2.03281, "map.loss_iou": 1.825, "map.loss_mask_things": 1.62768, "map.loss_mask_stuff": 0.06826, "map.d0.loss_mask_things_f": 1.65787, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.65958, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.63163, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.65382, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.0575, "map.d0.loss_cls_stuff_f": 0.00022, "map.d1.loss_mask_stuff_f": 0.05433, "map.d1.loss_cls_stuff_f": 0.00016, "map.d2.loss_mask_stuff_f": 0.05357, "map.d2.loss_cls_stuff_f": 0.00024, "map.d3.loss_mask_stuff_f": 0.05855, "map.d3.loss_cls_stuff_f": 0.00019, "map.d4.loss_mask_stuff_f": 0.05417, "map.d4.loss_cls_stuff_f": 0.0002, "map.d5.loss_mask_stuff_f": 0.05306, "map.d5.loss_cls_stuff_f": 0.00019, "map.d0.loss_cls": 0.80182, "map.d0.loss_bbox": 2.10965, "map.d0.loss_iou": 1.98482, "map.d1.loss_cls": 0.81704, "map.d1.loss_bbox": 2.06789, "map.d1.loss_iou": 1.92369, "map.d2.loss_cls": 0.8619, "map.d2.loss_bbox": 2.056, "map.d2.loss_iou": 1.87891, "map.d3.loss_cls": 0.94623, "map.d3.loss_bbox": 2.05801, "map.d3.loss_iou": 1.84109, "map.d4.loss_cls": 0.94142, "map.d4.loss_bbox": 2.04362, "map.d4.loss_iou": 1.8333, "loss": 83.61105, "grad_norm": 237.89449, "time": 10.24371}
