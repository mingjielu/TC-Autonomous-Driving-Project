{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map_profile/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ncustom_imports = dict(\n    imports=['my_hooks.profiler_hook'], allow_failed_imports=False)\ncustom_hooks = [\n    dict(\n        type='MyProfilerHook',\n        log_dir='./profiler_logs',\n        profile_step_start=60,\n        profile_step_end=62,\n        priority='NORMAL')\n]\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map_profile.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47021, "data_time": 1.68576, "track.frame_0_loss_cls_0": 1.27857, "track.frame_0_loss_bbox_0": 2.36396, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.26848, "track.frame_0_loss_bbox_1": 2.2887, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.28895, "track.frame_0_loss_bbox_2": 2.27694, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.24212, "track.frame_0_loss_bbox_3": 2.25028, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.22175, "track.frame_0_loss_bbox_4": 2.21111, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.24433, "track.frame_0_loss_bbox_5": 2.23054, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.62761, "track.frame_1_loss_bbox_0": 2.12394, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.68762, "track.frame_1_loss_bbox_1": 2.02913, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.6973, "track.frame_1_loss_bbox_2": 2.00396, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.71137, "track.frame_1_loss_bbox_3": 1.96647, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.68787, "track.frame_1_loss_bbox_4": 1.95927, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.73704, "track.frame_1_loss_bbox_5": 1.98127, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.65593, "track.frame_2_loss_bbox_0": 2.00599, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.59824, "track.frame_2_loss_bbox_1": 1.91491, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.69063, "track.frame_2_loss_bbox_2": 1.88102, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.66463, "track.frame_2_loss_bbox_3": 1.85541, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.63736, "track.frame_2_loss_bbox_4": 1.83166, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.62135, "track.frame_2_loss_bbox_5": 1.83619, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.86605, "track.frame_3_loss_bbox_0": 2.09489, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.67801, "track.frame_3_loss_bbox_1": 1.98283, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.74666, "track.frame_3_loss_bbox_2": 1.97054, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.77476, "track.frame_3_loss_bbox_3": 2.08027, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.80567, "track.frame_3_loss_bbox_4": 2.07778, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.75327, "track.frame_3_loss_bbox_5": 2.12256, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.88258, "track.frame_4_loss_bbox_0": 2.12387, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.79121, "track.frame_4_loss_bbox_1": 2.00887, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.74803, "track.frame_4_loss_bbox_2": 2.02316, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.65418, "track.frame_4_loss_bbox_3": 2.0227, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.59758, "track.frame_4_loss_bbox_4": 2.02138, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.65061, "track.frame_4_loss_bbox_5": 2.03617, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.2119, "map.loss_bbox": 1.782, "map.loss_iou": 2.07786, "map.loss_mask_things": 1.79828, "map.loss_mask_stuff": 0.08823, "map.d0.loss_mask_things_f": 1.80871, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79346, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.79314, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80929, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08319, "map.d0.loss_cls_stuff_f": 0.13933, "map.d1.loss_mask_stuff_f": 0.11163, "map.d1.loss_cls_stuff_f": 0.13499, "map.d2.loss_mask_stuff_f": 0.07634, "map.d2.loss_cls_stuff_f": 0.1333, "map.d3.loss_mask_stuff_f": 0.08487, "map.d3.loss_cls_stuff_f": 0.12041, "map.d4.loss_mask_stuff_f": 0.0838, "map.d4.loss_cls_stuff_f": 0.14066, "map.d5.loss_mask_stuff_f": 0.09173, "map.d5.loss_cls_stuff_f": 0.15595, "map.d0.loss_cls": 1.69168, "map.d0.loss_bbox": 1.82124, "map.d0.loss_iou": 2.10495, "map.d1.loss_cls": 1.56292, "map.d1.loss_bbox": 1.80786, "map.d1.loss_iou": 2.09507, "map.d2.loss_cls": 1.27495, "map.d2.loss_bbox": 1.79802, "map.d2.loss_iou": 2.08632, "map.d3.loss_cls": 1.22317, "map.d3.loss_bbox": 1.79559, "map.d3.loss_iou": 2.08638, "map.d4.loss_cls": 1.24701, "map.d4.loss_bbox": 1.78359, "map.d4.loss_iou": 2.08007, "loss": 152.06344, "grad_norm": 2843.71894, "time": 29.14051}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47021, "data_time": 0.10811, "track.frame_0_loss_cls_0": 0.73343, "track.frame_0_loss_bbox_0": 1.95007, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.70701, "track.frame_0_loss_bbox_1": 1.88356, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.67594, "track.frame_0_loss_bbox_2": 1.85433, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.65146, "track.frame_0_loss_bbox_3": 1.83113, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.64459, "track.frame_0_loss_bbox_4": 1.81325, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.6612, "track.frame_0_loss_bbox_5": 1.79725, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.93762, "track.frame_1_loss_bbox_0": 1.9587, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.81348, "track.frame_1_loss_bbox_1": 1.87058, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.7984, "track.frame_1_loss_bbox_2": 1.83647, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.80149, "track.frame_1_loss_bbox_3": 1.8187, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.8094, "track.frame_1_loss_bbox_4": 1.79598, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.80517, "track.frame_1_loss_bbox_5": 1.77877, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.93794, "track.frame_2_loss_bbox_0": 1.99, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.83824, "track.frame_2_loss_bbox_1": 1.927, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.77405, "track.frame_2_loss_bbox_2": 1.88631, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.74109, "track.frame_2_loss_bbox_3": 1.87804, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.72677, "track.frame_2_loss_bbox_4": 1.86647, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.73926, "track.frame_2_loss_bbox_5": 1.86281, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.93006, "track.frame_3_loss_bbox_0": 2.07981, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.81043, "track.frame_3_loss_bbox_1": 1.98835, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.75234, "track.frame_3_loss_bbox_2": 1.93165, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.74455, "track.frame_3_loss_bbox_3": 1.90879, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.7371, "track.frame_3_loss_bbox_4": 1.89144, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.73044, "track.frame_3_loss_bbox_5": 1.89118, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.74896, "track.frame_4_loss_bbox_0": 1.99927, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.69764, "track.frame_4_loss_bbox_1": 1.94871, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.70328, "track.frame_4_loss_bbox_2": 1.9038, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.69734, "track.frame_4_loss_bbox_3": 1.87604, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.72097, "track.frame_4_loss_bbox_4": 1.85922, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.73288, "track.frame_4_loss_bbox_5": 1.82951, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97894, "map.loss_bbox": 2.15241, "map.loss_iou": 2.03175, "map.loss_mask_things": 1.72264, "map.loss_mask_stuff": 0.08299, "map.d0.loss_mask_things_f": 1.7452, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.73046, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.70738, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70266, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08176, "map.d0.loss_cls_stuff_f": 0.00488, "map.d1.loss_mask_stuff_f": 0.08752, "map.d1.loss_cls_stuff_f": 0.00209, "map.d2.loss_mask_stuff_f": 0.07752, "map.d2.loss_cls_stuff_f": 0.00133, "map.d3.loss_mask_stuff_f": 0.08192, "map.d3.loss_cls_stuff_f": 0.00093, "map.d4.loss_mask_stuff_f": 0.08123, "map.d4.loss_cls_stuff_f": 0.00119, "map.d5.loss_mask_stuff_f": 0.08385, "map.d5.loss_cls_stuff_f": 0.00129, "map.d0.loss_cls": 1.42022, "map.d0.loss_bbox": 2.22983, "map.d0.loss_iou": 2.09562, "map.d1.loss_cls": 1.00305, "map.d1.loss_bbox": 2.2044, "map.d1.loss_iou": 2.09185, "map.d2.loss_cls": 0.91979, "map.d2.loss_bbox": 2.18067, "map.d2.loss_iou": 2.07307, "map.d3.loss_cls": 0.91931, "map.d3.loss_bbox": 2.17147, "map.d3.loss_iou": 2.05865, "map.d4.loss_cls": 0.98184, "map.d4.loss_bbox": 2.16733, "map.d4.loss_iou": 2.04571, "loss": 120.43246, "grad_norm": 458.75402, "time": 28.35965}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47133, "data_time": 0.08874, "track.frame_0_loss_cls_0": 0.6437, "track.frame_0_loss_bbox_0": 1.69407, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.657, "track.frame_0_loss_bbox_1": 1.64456, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.66618, "track.frame_0_loss_bbox_2": 1.59045, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.66476, "track.frame_0_loss_bbox_3": 1.57003, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.65559, "track.frame_0_loss_bbox_4": 1.56327, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.66504, "track.frame_0_loss_bbox_5": 1.55107, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.64757, "track.frame_1_loss_bbox_0": 1.74695, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.6627, "track.frame_1_loss_bbox_1": 1.69811, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.64014, "track.frame_1_loss_bbox_2": 1.67281, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.64217, "track.frame_1_loss_bbox_3": 1.64982, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.64443, "track.frame_1_loss_bbox_4": 1.62597, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.64338, "track.frame_1_loss_bbox_5": 1.61228, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.66218, "track.frame_2_loss_bbox_0": 1.95657, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.65542, "track.frame_2_loss_bbox_1": 1.86246, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.64633, "track.frame_2_loss_bbox_2": 1.82015, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.64474, "track.frame_2_loss_bbox_3": 1.80259, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.65038, "track.frame_2_loss_bbox_4": 1.78671, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.65545, "track.frame_2_loss_bbox_5": 1.78125, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.63071, "track.frame_3_loss_bbox_0": 1.6374, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.63801, "track.frame_3_loss_bbox_1": 1.5374, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.60077, "track.frame_3_loss_bbox_2": 1.49747, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.60069, "track.frame_3_loss_bbox_3": 1.47087, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.6003, "track.frame_3_loss_bbox_4": 1.45053, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.60079, "track.frame_3_loss_bbox_5": 1.44225, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.6547, "track.frame_4_loss_bbox_0": 1.59296, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.64546, "track.frame_4_loss_bbox_1": 1.51589, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.62547, "track.frame_4_loss_bbox_2": 1.48665, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.6112, "track.frame_4_loss_bbox_3": 1.47795, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.61383, "track.frame_4_loss_bbox_4": 1.45585, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.60654, "track.frame_4_loss_bbox_5": 1.44491, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97143, "map.loss_bbox": 1.77159, "map.loss_iou": 1.87995, "map.loss_mask_things": 1.72969, "map.loss_mask_stuff": 0.04587, "map.d0.loss_mask_things_f": 1.76408, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.75457, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.72704, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.74695, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05896, "map.d0.loss_cls_stuff_f": 0.00027, "map.d1.loss_mask_stuff_f": 0.05502, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.0489, "map.d2.loss_cls_stuff_f": 0.00016, "map.d3.loss_mask_stuff_f": 0.05881, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.04867, "map.d4.loss_cls_stuff_f": 0.00017, "map.d5.loss_mask_stuff_f": 0.05645, "map.d5.loss_cls_stuff_f": 0.00024, "map.d0.loss_cls": 1.18698, "map.d0.loss_bbox": 1.84664, "map.d0.loss_iou": 1.92561, "map.d1.loss_cls": 0.9006, "map.d1.loss_bbox": 1.82935, "map.d1.loss_iou": 1.91185, "map.d2.loss_cls": 0.88757, "map.d2.loss_bbox": 1.80371, "map.d2.loss_iou": 1.90142, "map.d3.loss_cls": 0.91764, "map.d3.loss_bbox": 1.79424, "map.d3.loss_iou": 1.88891, "map.d4.loss_cls": 0.95494, "map.d4.loss_bbox": 1.785, "map.d4.loss_iou": 1.88559, "loss": 104.95406, "grad_norm": 256.86267, "time": 14.228}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47133, "data_time": 0.09735, "track.frame_0_loss_cls_0": 0.54571, "track.frame_0_loss_bbox_0": 1.57409, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.5497, "track.frame_0_loss_bbox_1": 1.46078, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.52053, "track.frame_0_loss_bbox_2": 1.44452, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.51503, "track.frame_0_loss_bbox_3": 1.44165, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.51058, "track.frame_0_loss_bbox_4": 1.43306, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.51603, "track.frame_0_loss_bbox_5": 1.42763, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.51858, "track.frame_1_loss_bbox_0": 1.62321, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.52297, "track.frame_1_loss_bbox_1": 1.4925, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.50285, "track.frame_1_loss_bbox_2": 1.45551, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.48675, "track.frame_1_loss_bbox_3": 1.44196, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.49155, "track.frame_1_loss_bbox_4": 1.42065, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.49924, "track.frame_1_loss_bbox_5": 1.41314, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.54538, "track.frame_2_loss_bbox_0": 1.42167, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.50661, "track.frame_2_loss_bbox_1": 1.32146, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.49938, "track.frame_2_loss_bbox_2": 1.28055, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.50681, "track.frame_2_loss_bbox_3": 1.25675, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.50783, "track.frame_2_loss_bbox_4": 1.25874, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.51018, "track.frame_2_loss_bbox_5": 1.24178, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.50985, "track.frame_3_loss_bbox_0": 1.36383, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.48911, "track.frame_3_loss_bbox_1": 1.26044, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.47381, "track.frame_3_loss_bbox_2": 1.23989, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.47768, "track.frame_3_loss_bbox_3": 1.22407, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.47391, "track.frame_3_loss_bbox_4": 1.21875, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.47398, "track.frame_3_loss_bbox_5": 1.20291, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.5642, "track.frame_4_loss_bbox_0": 1.44144, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.53888, "track.frame_4_loss_bbox_1": 1.33389, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.53655, "track.frame_4_loss_bbox_2": 1.30501, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.53397, "track.frame_4_loss_bbox_3": 1.28388, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.52246, "track.frame_4_loss_bbox_4": 1.27835, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.5184, "track.frame_4_loss_bbox_5": 1.28124, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.92491, "map.loss_bbox": 2.00417, "map.loss_iou": 2.02018, "map.loss_mask_things": 1.68277, "map.loss_mask_stuff": 0.08594, "map.d0.loss_mask_things_f": 1.71243, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70619, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.68644, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68579, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06321, "map.d0.loss_cls_stuff_f": 0.00023, "map.d1.loss_mask_stuff_f": 0.06546, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.06273, "map.d2.loss_cls_stuff_f": 0.00016, "map.d3.loss_mask_stuff_f": 0.0788, "map.d3.loss_cls_stuff_f": 0.00014, "map.d4.loss_mask_stuff_f": 0.07159, "map.d4.loss_cls_stuff_f": 0.00023, "map.d5.loss_mask_stuff_f": 0.06387, "map.d5.loss_cls_stuff_f": 0.00038, "map.d0.loss_cls": 0.94373, "map.d0.loss_bbox": 2.09349, "map.d0.loss_iou": 2.09978, "map.d1.loss_cls": 0.88158, "map.d1.loss_bbox": 2.05555, "map.d1.loss_iou": 2.07754, "map.d2.loss_cls": 0.92126, "map.d2.loss_bbox": 2.01413, "map.d2.loss_iou": 2.0524, "map.d3.loss_cls": 0.90663, "map.d3.loss_bbox": 2.01783, "map.d3.loss_iou": 2.03742, "map.d4.loss_cls": 0.93942, "map.d4.loss_bbox": 2.01039, "map.d4.loss_iou": 2.0244, "loss": 95.20326, "grad_norm": 311.21026, "time": 13.72143}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 47133, "data_time": 0.11389, "track.frame_0_loss_cls_0": 0.5566, "track.frame_0_loss_bbox_0": 1.46421, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.58568, "track.frame_0_loss_bbox_1": 1.34117, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.62082, "track.frame_0_loss_bbox_2": 1.33635, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.58725, "track.frame_0_loss_bbox_3": 1.31372, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.58763, "track.frame_0_loss_bbox_4": 1.2905, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.60477, "track.frame_0_loss_bbox_5": 1.29198, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.56962, "track.frame_1_loss_bbox_0": 1.52846, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.59837, "track.frame_1_loss_bbox_1": 1.37474, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.5919, "track.frame_1_loss_bbox_2": 1.34664, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.57356, "track.frame_1_loss_bbox_3": 1.34901, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.56509, "track.frame_1_loss_bbox_4": 1.33783, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.57227, "track.frame_1_loss_bbox_5": 1.33964, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.59306, "track.frame_2_loss_bbox_0": 1.5745, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.57488, "track.frame_2_loss_bbox_1": 1.41732, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.56558, "track.frame_2_loss_bbox_2": 1.37591, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.53659, "track.frame_2_loss_bbox_3": 1.37223, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.53208, "track.frame_2_loss_bbox_4": 1.36105, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.54797, "track.frame_2_loss_bbox_5": 1.35115, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.59154, "track.frame_3_loss_bbox_0": 1.57183, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.56342, "track.frame_3_loss_bbox_1": 1.47011, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.5796, "track.frame_3_loss_bbox_2": 1.4105, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.56553, "track.frame_3_loss_bbox_3": 1.4015, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.57889, "track.frame_3_loss_bbox_4": 1.38005, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.5856, "track.frame_3_loss_bbox_5": 1.3883, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.56643, "track.frame_4_loss_bbox_0": 1.57692, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.5617, "track.frame_4_loss_bbox_1": 1.41849, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.53534, "track.frame_4_loss_bbox_2": 1.37013, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.51892, "track.frame_4_loss_bbox_3": 1.35156, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.51818, "track.frame_4_loss_bbox_4": 1.32856, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.52204, "track.frame_4_loss_bbox_5": 1.33362, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97409, "map.loss_bbox": 2.15036, "map.loss_iou": 1.76753, "map.loss_mask_things": 1.59669, "map.loss_mask_stuff": 0.08588, "map.d0.loss_mask_things_f": 1.65055, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.63678, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.62023, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.61776, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08476, "map.d0.loss_cls_stuff_f": 0.00035, "map.d1.loss_mask_stuff_f": 0.08209, "map.d1.loss_cls_stuff_f": 0.00023, "map.d2.loss_mask_stuff_f": 0.0798, "map.d2.loss_cls_stuff_f": 0.00021, "map.d3.loss_mask_stuff_f": 0.099, "map.d3.loss_cls_stuff_f": 0.00027, "map.d4.loss_mask_stuff_f": 0.09343, "map.d4.loss_cls_stuff_f": 0.00034, "map.d5.loss_mask_stuff_f": 0.08318, "map.d5.loss_cls_stuff_f": 0.00037, "map.d0.loss_cls": 0.89856, "map.d0.loss_bbox": 2.21092, "map.d0.loss_iou": 1.80846, "map.d1.loss_cls": 0.90898, "map.d1.loss_bbox": 2.17606, "map.d1.loss_iou": 1.784, "map.d2.loss_cls": 0.91815, "map.d2.loss_bbox": 2.16089, "map.d2.loss_iou": 1.75739, "map.d3.loss_cls": 0.92786, "map.d3.loss_bbox": 2.16112, "map.d3.loss_iou": 1.76238, "map.d4.loss_cls": 0.95152, "map.d4.loss_bbox": 2.15443, "map.d4.loss_iou": 1.75772, "loss": 96.7812, "grad_norm": 410.55765, "time": 11.36916}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 47242, "data_time": 0.09006, "track.frame_0_loss_cls_0": 0.52366, "track.frame_0_loss_bbox_0": 1.24793, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.53187, "track.frame_0_loss_bbox_1": 1.06314, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.51241, "track.frame_0_loss_bbox_2": 1.02011, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.49931, "track.frame_0_loss_bbox_3": 1.00387, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.49098, "track.frame_0_loss_bbox_4": 1.00704, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.50265, "track.frame_0_loss_bbox_5": 1.00571, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.51197, "track.frame_1_loss_bbox_0": 1.23171, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.50214, "track.frame_1_loss_bbox_1": 1.10221, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.50391, "track.frame_1_loss_bbox_2": 1.0564, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.48601, "track.frame_1_loss_bbox_3": 1.03595, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.4882, "track.frame_1_loss_bbox_4": 1.02592, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.49212, "track.frame_1_loss_bbox_5": 1.02021, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.50486, "track.frame_2_loss_bbox_0": 1.12678, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.49523, "track.frame_2_loss_bbox_1": 0.96288, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.47937, "track.frame_2_loss_bbox_2": 0.93559, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.46444, "track.frame_2_loss_bbox_3": 0.92865, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.45485, "track.frame_2_loss_bbox_4": 0.92586, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.45806, "track.frame_2_loss_bbox_5": 0.91936, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.47239, "track.frame_3_loss_bbox_0": 1.1486, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.4755, "track.frame_3_loss_bbox_1": 1.01367, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.45027, "track.frame_3_loss_bbox_2": 0.98186, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.43025, "track.frame_3_loss_bbox_3": 0.98545, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.41516, "track.frame_3_loss_bbox_4": 0.98988, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.42888, "track.frame_3_loss_bbox_5": 0.97947, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.48715, "track.frame_4_loss_bbox_0": 1.19477, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.47043, "track.frame_4_loss_bbox_1": 1.07546, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.46386, "track.frame_4_loss_bbox_2": 1.05074, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.46071, "track.frame_4_loss_bbox_3": 1.04056, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.46021, "track.frame_4_loss_bbox_4": 1.0428, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.46291, "track.frame_4_loss_bbox_5": 1.04617, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.95713, "map.loss_bbox": 2.04573, "map.loss_iou": 1.8183, "map.loss_mask_things": 1.62668, "map.loss_mask_stuff": 0.06476, "map.d0.loss_mask_things_f": 1.66519, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.65653, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.63486, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.65887, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.0547, "map.d0.loss_cls_stuff_f": 0.00025, "map.d1.loss_mask_stuff_f": 0.05348, "map.d1.loss_cls_stuff_f": 0.00016, "map.d2.loss_mask_stuff_f": 0.05151, "map.d2.loss_cls_stuff_f": 0.00021, "map.d3.loss_mask_stuff_f": 0.06002, "map.d3.loss_cls_stuff_f": 0.0002, "map.d4.loss_mask_stuff_f": 0.0552, "map.d4.loss_cls_stuff_f": 0.00022, "map.d5.loss_mask_stuff_f": 0.05218, "map.d5.loss_cls_stuff_f": 0.00019, "map.d0.loss_cls": 0.79042, "map.d0.loss_bbox": 2.11326, "map.d0.loss_iou": 1.96868, "map.d1.loss_cls": 0.80123, "map.d1.loss_bbox": 2.06529, "map.d1.loss_iou": 1.92539, "map.d2.loss_cls": 0.88012, "map.d2.loss_bbox": 2.05117, "map.d2.loss_iou": 1.86315, "map.d3.loss_cls": 0.92035, "map.d3.loss_bbox": 2.05017, "map.d3.loss_iou": 1.85137, "map.d4.loss_cls": 0.92269, "map.d4.loss_bbox": 2.05078, "map.d4.loss_iou": 1.83094, "loss": 83.08986, "grad_norm": 241.21871, "time": 10.75629}
