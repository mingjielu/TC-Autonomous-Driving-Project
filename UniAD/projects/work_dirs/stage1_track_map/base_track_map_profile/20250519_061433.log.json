{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map_profile/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ncustom_imports = dict(\n    imports=['my_hooks.profiler_hook'], allow_failed_imports=False)\ncustom_hooks = [\n    dict(\n        type='MyProfilerHook',\n        log_dir='./profiler_logs',\n        profile_step_start=60,\n        profile_step_end=62,\n        priority='NORMAL')\n]\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map_profile.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47021, "data_time": 1.01447, "track.frame_0_loss_cls_0": 1.27846, "track.frame_0_loss_bbox_0": 2.36387, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.26839, "track.frame_0_loss_bbox_1": 2.28862, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.28882, "track.frame_0_loss_bbox_2": 2.2769, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.24183, "track.frame_0_loss_bbox_3": 2.25069, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.22148, "track.frame_0_loss_bbox_4": 2.21108, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.24449, "track.frame_0_loss_bbox_5": 2.23015, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.62744, "track.frame_1_loss_bbox_0": 2.1239, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.68746, "track.frame_1_loss_bbox_1": 2.02904, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.69707, "track.frame_1_loss_bbox_2": 2.00394, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.71118, "track.frame_1_loss_bbox_3": 1.96643, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.68776, "track.frame_1_loss_bbox_4": 1.95923, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.73689, "track.frame_1_loss_bbox_5": 1.98122, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.65574, "track.frame_2_loss_bbox_0": 2.00601, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.59809, "track.frame_2_loss_bbox_1": 1.91487, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.69139, "track.frame_2_loss_bbox_2": 1.88008, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.66427, "track.frame_2_loss_bbox_3": 1.85536, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.63701, "track.frame_2_loss_bbox_4": 1.83157, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.62112, "track.frame_2_loss_bbox_5": 1.83603, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.86534, "track.frame_3_loss_bbox_0": 2.09481, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.67818, "track.frame_3_loss_bbox_1": 1.98162, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.74581, "track.frame_3_loss_bbox_2": 1.97035, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.77821, "track.frame_3_loss_bbox_3": 2.07603, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.80532, "track.frame_3_loss_bbox_4": 2.07784, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.75054, "track.frame_3_loss_bbox_5": 2.12519, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.88208, "track.frame_4_loss_bbox_0": 2.12329, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.79148, "track.frame_4_loss_bbox_1": 2.00947, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.74575, "track.frame_4_loss_bbox_2": 2.02639, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.65367, "track.frame_4_loss_bbox_3": 2.0234, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.59834, "track.frame_4_loss_bbox_4": 2.02117, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.64879, "track.frame_4_loss_bbox_5": 2.03652, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.21184, "map.loss_bbox": 1.782, "map.loss_iou": 2.07786, "map.loss_mask_things": 1.79827, "map.loss_mask_stuff": 0.08822, "map.d0.loss_mask_things_f": 1.80871, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79345, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.79311, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80928, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08318, "map.d0.loss_cls_stuff_f": 0.13931, "map.d1.loss_mask_stuff_f": 0.11164, "map.d1.loss_cls_stuff_f": 0.13497, "map.d2.loss_mask_stuff_f": 0.07633, "map.d2.loss_cls_stuff_f": 0.13329, "map.d3.loss_mask_stuff_f": 0.08487, "map.d3.loss_cls_stuff_f": 0.12041, "map.d4.loss_mask_stuff_f": 0.08379, "map.d4.loss_cls_stuff_f": 0.14064, "map.d5.loss_mask_stuff_f": 0.09173, "map.d5.loss_cls_stuff_f": 0.15593, "map.d0.loss_cls": 1.69161, "map.d0.loss_bbox": 1.82125, "map.d0.loss_iou": 2.10495, "map.d1.loss_cls": 1.56279, "map.d1.loss_bbox": 1.80786, "map.d1.loss_iou": 2.09507, "map.d2.loss_cls": 1.27485, "map.d2.loss_bbox": 1.79802, "map.d2.loss_iou": 2.08632, "map.d3.loss_cls": 1.22306, "map.d3.loss_bbox": 1.79559, "map.d3.loss_iou": 2.08639, "map.d4.loss_cls": 1.24526, "map.d4.loss_bbox": 1.78377, "map.d4.loss_iou": 2.08162, "loss": 152.05467, "grad_norm": 2833.65526, "time": 11.26416}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47021, "data_time": 0.10088, "track.frame_0_loss_cls_0": 0.73213, "track.frame_0_loss_bbox_0": 1.9508, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.70617, "track.frame_0_loss_bbox_1": 1.88319, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.67517, "track.frame_0_loss_bbox_2": 1.85472, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.65416, "track.frame_0_loss_bbox_3": 1.82747, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.64214, "track.frame_0_loss_bbox_4": 1.81532, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.66396, "track.frame_0_loss_bbox_5": 1.79397, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.93694, "track.frame_1_loss_bbox_0": 1.96225, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.81961, "track.frame_1_loss_bbox_1": 1.8687, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.80219, "track.frame_1_loss_bbox_2": 1.837, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.80358, "track.frame_1_loss_bbox_3": 1.82009, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.80906, "track.frame_1_loss_bbox_4": 1.79849, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.80736, "track.frame_1_loss_bbox_5": 1.77908, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.93563, "track.frame_2_loss_bbox_0": 1.98082, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.83631, "track.frame_2_loss_bbox_1": 1.92177, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.77498, "track.frame_2_loss_bbox_2": 1.87959, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.74308, "track.frame_2_loss_bbox_3": 1.87205, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.72774, "track.frame_2_loss_bbox_4": 1.86158, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.74417, "track.frame_2_loss_bbox_5": 1.85402, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.93579, "track.frame_3_loss_bbox_0": 2.08916, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.80611, "track.frame_3_loss_bbox_1": 1.99842, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.75387, "track.frame_3_loss_bbox_2": 1.94314, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.74967, "track.frame_3_loss_bbox_3": 1.92025, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.74225, "track.frame_3_loss_bbox_4": 1.90118, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.74149, "track.frame_3_loss_bbox_5": 1.89743, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.74345, "track.frame_4_loss_bbox_0": 1.99751, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.69262, "track.frame_4_loss_bbox_1": 1.94768, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.69675, "track.frame_4_loss_bbox_2": 1.90235, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.69542, "track.frame_4_loss_bbox_3": 1.87129, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.7103, "track.frame_4_loss_bbox_4": 1.86458, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.72093, "track.frame_4_loss_bbox_5": 1.83888, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.98011, "map.loss_bbox": 2.15129, "map.loss_iou": 2.03179, "map.loss_mask_things": 1.72201, "map.loss_mask_stuff": 0.08284, "map.d0.loss_mask_things_f": 1.74495, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.73021, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.70733, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70289, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08176, "map.d0.loss_cls_stuff_f": 0.00485, "map.d1.loss_mask_stuff_f": 0.08735, "map.d1.loss_cls_stuff_f": 0.00208, "map.d2.loss_mask_stuff_f": 0.0776, "map.d2.loss_cls_stuff_f": 0.00133, "map.d3.loss_mask_stuff_f": 0.08195, "map.d3.loss_cls_stuff_f": 0.00092, "map.d4.loss_mask_stuff_f": 0.08128, "map.d4.loss_cls_stuff_f": 0.00118, "map.d5.loss_mask_stuff_f": 0.08386, "map.d5.loss_cls_stuff_f": 0.00128, "map.d0.loss_cls": 1.42076, "map.d0.loss_bbox": 2.2291, "map.d0.loss_iou": 2.0957, "map.d1.loss_cls": 1.00259, "map.d1.loss_bbox": 2.20438, "map.d1.loss_iou": 2.09189, "map.d2.loss_cls": 0.91899, "map.d2.loss_bbox": 2.18144, "map.d2.loss_iou": 2.07319, "map.d3.loss_cls": 0.91987, "map.d3.loss_bbox": 2.17149, "map.d3.loss_iou": 2.0587, "map.d4.loss_cls": 0.98302, "map.d4.loss_bbox": 2.1667, "map.d4.loss_iou": 2.04584, "loss": 120.45832, "grad_norm": 453.70324, "time": 10.12302}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47118, "data_time": 0.09462, "track.frame_0_loss_cls_0": 0.64616, "track.frame_0_loss_bbox_0": 1.75713, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.6618, "track.frame_0_loss_bbox_1": 1.70179, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.65626, "track.frame_0_loss_bbox_2": 1.65156, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.67475, "track.frame_0_loss_bbox_3": 1.61768, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.67417, "track.frame_0_loss_bbox_4": 1.60043, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.68318, "track.frame_0_loss_bbox_5": 1.58671, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.65567, "track.frame_1_loss_bbox_0": 1.72225, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.6597, "track.frame_1_loss_bbox_1": 1.67609, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.65212, "track.frame_1_loss_bbox_2": 1.64789, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.65716, "track.frame_1_loss_bbox_3": 1.61728, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.65903, "track.frame_1_loss_bbox_4": 1.60333, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.66109, "track.frame_1_loss_bbox_5": 1.57654, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.67043, "track.frame_2_loss_bbox_0": 1.93993, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.63898, "track.frame_2_loss_bbox_1": 1.82105, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.6408, "track.frame_2_loss_bbox_2": 1.79211, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.63143, "track.frame_2_loss_bbox_3": 1.77204, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.64085, "track.frame_2_loss_bbox_4": 1.74984, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.6437, "track.frame_2_loss_bbox_5": 1.73993, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.61526, "track.frame_3_loss_bbox_0": 1.6107, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.60947, "track.frame_3_loss_bbox_1": 1.52419, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.59502, "track.frame_3_loss_bbox_2": 1.46983, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.61112, "track.frame_3_loss_bbox_3": 1.43628, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.6023, "track.frame_3_loss_bbox_4": 1.4154, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.60321, "track.frame_3_loss_bbox_5": 1.40975, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.67451, "track.frame_4_loss_bbox_0": 1.59328, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.64047, "track.frame_4_loss_bbox_1": 1.50459, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.62305, "track.frame_4_loss_bbox_2": 1.46755, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.61064, "track.frame_4_loss_bbox_3": 1.45498, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.60484, "track.frame_4_loss_bbox_4": 1.44299, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.60948, "track.frame_4_loss_bbox_5": 1.42988, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.9708, "map.loss_bbox": 1.77195, "map.loss_iou": 1.88215, "map.loss_mask_things": 1.72745, "map.loss_mask_stuff": 0.0455, "map.d0.loss_mask_things_f": 1.76403, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.75324, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.72614, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.75294, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.0596, "map.d0.loss_cls_stuff_f": 0.00026, "map.d1.loss_mask_stuff_f": 0.05448, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.04854, "map.d2.loss_cls_stuff_f": 0.00016, "map.d3.loss_mask_stuff_f": 0.05918, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.04823, "map.d4.loss_cls_stuff_f": 0.00017, "map.d5.loss_mask_stuff_f": 0.05602, "map.d5.loss_cls_stuff_f": 0.00023, "map.d0.loss_cls": 1.18901, "map.d0.loss_bbox": 1.84501, "map.d0.loss_iou": 1.93616, "map.d1.loss_cls": 0.89697, "map.d1.loss_bbox": 1.8238, "map.d1.loss_iou": 1.9255, "map.d2.loss_cls": 0.89432, "map.d2.loss_bbox": 1.8058, "map.d2.loss_iou": 1.90352, "map.d3.loss_cls": 0.94045, "map.d3.loss_bbox": 1.78702, "map.d3.loss_iou": 1.88926, "map.d4.loss_cls": 0.96941, "map.d4.loss_bbox": 1.77949, "map.d4.loss_iou": 1.8794, "loss": 104.7262, "grad_norm": 274.62168, "time": 10.15548}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47118, "data_time": 0.09668, "track.frame_0_loss_cls_0": 0.55204, "track.frame_0_loss_bbox_0": 1.56914, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.54225, "track.frame_0_loss_bbox_1": 1.46912, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.52991, "track.frame_0_loss_bbox_2": 1.45137, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.50483, "track.frame_0_loss_bbox_3": 1.45507, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.49747, "track.frame_0_loss_bbox_4": 1.45069, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.50691, "track.frame_0_loss_bbox_5": 1.44207, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.52103, "track.frame_1_loss_bbox_0": 1.6581, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.49871, "track.frame_1_loss_bbox_1": 1.51605, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.49542, "track.frame_1_loss_bbox_2": 1.47414, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.48911, "track.frame_1_loss_bbox_3": 1.45798, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.48429, "track.frame_1_loss_bbox_4": 1.45455, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.50119, "track.frame_1_loss_bbox_5": 1.43496, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.54106, "track.frame_2_loss_bbox_0": 1.43807, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.52319, "track.frame_2_loss_bbox_1": 1.33399, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.51235, "track.frame_2_loss_bbox_2": 1.28399, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.51061, "track.frame_2_loss_bbox_3": 1.26865, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.50847, "track.frame_2_loss_bbox_4": 1.26521, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.51327, "track.frame_2_loss_bbox_5": 1.25821, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.53199, "track.frame_3_loss_bbox_0": 1.33072, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.50456, "track.frame_3_loss_bbox_1": 1.2243, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.48128, "track.frame_3_loss_bbox_2": 1.18735, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.48173, "track.frame_3_loss_bbox_3": 1.18759, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.4662, "track.frame_3_loss_bbox_4": 1.18346, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.46865, "track.frame_3_loss_bbox_5": 1.1747, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.56402, "track.frame_4_loss_bbox_0": 1.42332, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.53157, "track.frame_4_loss_bbox_1": 1.33906, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.51946, "track.frame_4_loss_bbox_2": 1.30487, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.51308, "track.frame_4_loss_bbox_3": 1.28252, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.4992, "track.frame_4_loss_bbox_4": 1.28902, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.50365, "track.frame_4_loss_bbox_5": 1.28079, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.92963, "map.loss_bbox": 2.00388, "map.loss_iou": 2.01917, "map.loss_mask_things": 1.67705, "map.loss_mask_stuff": 0.08381, "map.d0.loss_mask_things_f": 1.71125, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70136, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.67917, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.69132, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06462, "map.d0.loss_cls_stuff_f": 0.00022, "map.d1.loss_mask_stuff_f": 0.06438, "map.d1.loss_cls_stuff_f": 0.00018, "map.d2.loss_mask_stuff_f": 0.06372, "map.d2.loss_cls_stuff_f": 0.00019, "map.d3.loss_mask_stuff_f": 0.07953, "map.d3.loss_cls_stuff_f": 0.00014, "map.d4.loss_mask_stuff_f": 0.07008, "map.d4.loss_cls_stuff_f": 0.00022, "map.d5.loss_mask_stuff_f": 0.06431, "map.d5.loss_cls_stuff_f": 0.00036, "map.d0.loss_cls": 0.94827, "map.d0.loss_bbox": 2.0946, "map.d0.loss_iou": 2.10057, "map.d1.loss_cls": 0.9023, "map.d1.loss_bbox": 2.03953, "map.d1.loss_iou": 2.07486, "map.d2.loss_cls": 0.90866, "map.d2.loss_bbox": 2.01834, "map.d2.loss_iou": 2.05444, "map.d3.loss_cls": 0.90622, "map.d3.loss_bbox": 2.0115, "map.d3.loss_iou": 2.03664, "map.d4.loss_cls": 0.94188, "map.d4.loss_bbox": 2.00874, "map.d4.loss_iou": 2.02897, "loss": 95.16666, "grad_norm": 295.49924, "time": 10.18758}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 47118, "data_time": 0.11164, "track.frame_0_loss_cls_0": 0.53469, "track.frame_0_loss_bbox_0": 1.40508, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.58702, "track.frame_0_loss_bbox_1": 1.30018, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.60376, "track.frame_0_loss_bbox_2": 1.28581, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.57286, "track.frame_0_loss_bbox_3": 1.28161, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.57922, "track.frame_0_loss_bbox_4": 1.26694, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.59477, "track.frame_0_loss_bbox_5": 1.26257, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.57168, "track.frame_1_loss_bbox_0": 1.56183, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.60674, "track.frame_1_loss_bbox_1": 1.40597, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.59237, "track.frame_1_loss_bbox_2": 1.37391, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.57394, "track.frame_1_loss_bbox_3": 1.37711, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.57552, "track.frame_1_loss_bbox_4": 1.35783, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.56345, "track.frame_1_loss_bbox_5": 1.37177, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.57404, "track.frame_2_loss_bbox_0": 1.60352, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.59134, "track.frame_2_loss_bbox_1": 1.45765, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.58739, "track.frame_2_loss_bbox_2": 1.39271, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.5429, "track.frame_2_loss_bbox_3": 1.37728, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.54151, "track.frame_2_loss_bbox_4": 1.36069, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.54643, "track.frame_2_loss_bbox_5": 1.3574, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.54993, "track.frame_3_loss_bbox_0": 1.57677, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.5526, "track.frame_3_loss_bbox_1": 1.46568, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.54716, "track.frame_3_loss_bbox_2": 1.42769, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.55535, "track.frame_3_loss_bbox_3": 1.4083, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.55764, "track.frame_3_loss_bbox_4": 1.39026, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.5718, "track.frame_3_loss_bbox_5": 1.38613, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.56322, "track.frame_4_loss_bbox_0": 1.58331, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.55732, "track.frame_4_loss_bbox_1": 1.50003, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.58283, "track.frame_4_loss_bbox_2": 1.41357, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.57016, "track.frame_4_loss_bbox_3": 1.38461, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.55259, "track.frame_4_loss_bbox_4": 1.37199, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.55136, "track.frame_4_loss_bbox_5": 1.36617, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.99477, "map.loss_bbox": 2.14795, "map.loss_iou": 1.76671, "map.loss_mask_things": 1.60025, "map.loss_mask_stuff": 0.09157, "map.d0.loss_mask_things_f": 1.65168, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.62053, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.60491, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.61643, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.0818, "map.d0.loss_cls_stuff_f": 0.00036, "map.d1.loss_mask_stuff_f": 0.09127, "map.d1.loss_cls_stuff_f": 0.00022, "map.d2.loss_mask_stuff_f": 0.08271, "map.d2.loss_cls_stuff_f": 0.00028, "map.d3.loss_mask_stuff_f": 0.09589, "map.d3.loss_cls_stuff_f": 0.00029, "map.d4.loss_mask_stuff_f": 0.09696, "map.d4.loss_cls_stuff_f": 0.00033, "map.d5.loss_mask_stuff_f": 0.09058, "map.d5.loss_cls_stuff_f": 0.00036, "map.d0.loss_cls": 0.91155, "map.d0.loss_bbox": 2.19944, "map.d0.loss_iou": 1.81162, "map.d1.loss_cls": 0.92997, "map.d1.loss_bbox": 2.16443, "map.d1.loss_iou": 1.78314, "map.d2.loss_cls": 0.93695, "map.d2.loss_bbox": 2.15186, "map.d2.loss_iou": 1.76399, "map.d3.loss_cls": 0.95479, "map.d3.loss_bbox": 2.15889, "map.d3.loss_iou": 1.76176, "map.d4.loss_cls": 0.98271, "map.d4.loss_bbox": 2.14841, "map.d4.loss_iou": 1.76742, "loss": 97.18874, "grad_norm": 330.64414, "time": 10.09726}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 47248, "data_time": 0.10031, "track.frame_0_loss_cls_0": 0.52498, "track.frame_0_loss_bbox_0": 1.21137, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.52867, "track.frame_0_loss_bbox_1": 1.05945, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.49218, "track.frame_0_loss_bbox_2": 1.0183, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.49034, "track.frame_0_loss_bbox_3": 1.00395, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.47781, "track.frame_0_loss_bbox_4": 1.01531, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.49653, "track.frame_0_loss_bbox_5": 1.00677, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.51591, "track.frame_1_loss_bbox_0": 1.23534, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.5334, "track.frame_1_loss_bbox_1": 1.10483, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.51601, "track.frame_1_loss_bbox_2": 1.08193, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.50013, "track.frame_1_loss_bbox_3": 1.07637, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.49632, "track.frame_1_loss_bbox_4": 1.05343, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.50314, "track.frame_1_loss_bbox_5": 1.05641, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.47912, "track.frame_2_loss_bbox_0": 1.05497, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.45826, "track.frame_2_loss_bbox_1": 0.90653, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.43726, "track.frame_2_loss_bbox_2": 0.87564, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.41307, "track.frame_2_loss_bbox_3": 0.86049, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.4181, "track.frame_2_loss_bbox_4": 0.84308, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.43198, "track.frame_2_loss_bbox_5": 0.82903, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.48053, "track.frame_3_loss_bbox_0": 1.14626, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.46736, "track.frame_3_loss_bbox_1": 1.02094, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.44115, "track.frame_3_loss_bbox_2": 0.98496, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.4315, "track.frame_3_loss_bbox_3": 0.97914, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.4334, "track.frame_3_loss_bbox_4": 0.9836, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.42498, "track.frame_3_loss_bbox_5": 0.98357, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.50422, "track.frame_4_loss_bbox_0": 1.20719, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.48931, "track.frame_4_loss_bbox_1": 1.10437, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.49117, "track.frame_4_loss_bbox_2": 1.07214, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.46585, "track.frame_4_loss_bbox_3": 1.06285, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.46512, "track.frame_4_loss_bbox_4": 1.06401, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.47824, "track.frame_4_loss_bbox_5": 1.03897, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.96268, "map.loss_bbox": 2.04496, "map.loss_iou": 1.81469, "map.loss_mask_things": 1.63225, "map.loss_mask_stuff": 0.05952, "map.d0.loss_mask_things_f": 1.66634, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.65102, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.63208, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.65444, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05459, "map.d0.loss_cls_stuff_f": 0.00031, "map.d1.loss_mask_stuff_f": 0.05859, "map.d1.loss_cls_stuff_f": 0.00019, "map.d2.loss_mask_stuff_f": 0.05275, "map.d2.loss_cls_stuff_f": 0.00024, "map.d3.loss_mask_stuff_f": 0.06076, "map.d3.loss_cls_stuff_f": 0.0002, "map.d4.loss_mask_stuff_f": 0.05614, "map.d4.loss_cls_stuff_f": 0.00022, "map.d5.loss_mask_stuff_f": 0.05163, "map.d5.loss_cls_stuff_f": 0.00018, "map.d0.loss_cls": 0.82324, "map.d0.loss_bbox": 2.11084, "map.d0.loss_iou": 1.97255, "map.d1.loss_cls": 0.82184, "map.d1.loss_bbox": 2.08046, "map.d1.loss_iou": 1.92346, "map.d2.loss_cls": 0.88025, "map.d2.loss_bbox": 2.06958, "map.d2.loss_iou": 1.87187, "map.d3.loss_cls": 0.96661, "map.d3.loss_bbox": 2.06735, "map.d3.loss_iou": 1.82878, "map.d4.loss_cls": 0.9562, "map.d4.loss_bbox": 2.05467, "map.d4.loss_iou": 1.82049, "loss": 82.92924, "grad_norm": 245.96299, "time": 10.17474}
