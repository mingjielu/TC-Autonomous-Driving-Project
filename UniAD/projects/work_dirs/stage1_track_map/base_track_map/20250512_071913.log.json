{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ngpu_ids = range(0, 7)\n", "seed": 0, "exp_name": "base_track_map.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47178, "data_time": 1.16651, "track.frame_0_loss_cls_0": 1.16692, "track.frame_0_loss_bbox_0": 1.75491, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.12208, "track.frame_0_loss_bbox_1": 1.68161, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.11754, "track.frame_0_loss_bbox_2": 1.6541, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.0947, "track.frame_0_loss_bbox_3": 1.63652, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.12119, "track.frame_0_loss_bbox_4": 1.62633, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.14797, "track.frame_0_loss_bbox_5": 1.62057, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.41576, "track.frame_1_loss_bbox_0": 1.81246, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.30992, "track.frame_1_loss_bbox_1": 1.72273, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.32789, "track.frame_1_loss_bbox_2": 1.68692, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.28959, "track.frame_1_loss_bbox_3": 1.66164, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.30013, "track.frame_1_loss_bbox_4": 1.66051, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.32276, "track.frame_1_loss_bbox_5": 1.65145, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.31431, "track.frame_2_loss_bbox_0": 1.7771, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.26862, "track.frame_2_loss_bbox_1": 1.69336, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.2893, "track.frame_2_loss_bbox_2": 1.65882, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.27366, "track.frame_2_loss_bbox_3": 1.64824, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.30831, "track.frame_2_loss_bbox_4": 1.63098, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.3143, "track.frame_2_loss_bbox_5": 1.62459, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.40726, "track.frame_3_loss_bbox_0": 1.73352, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.33736, "track.frame_3_loss_bbox_1": 1.64467, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.35631, "track.frame_3_loss_bbox_2": 1.61694, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.32139, "track.frame_3_loss_bbox_3": 1.60336, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.34188, "track.frame_3_loss_bbox_4": 1.58962, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.3468, "track.frame_3_loss_bbox_5": 1.58435, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.35828, "track.frame_4_loss_bbox_0": 1.7699, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.27175, "track.frame_4_loss_bbox_1": 1.6674, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.31345, "track.frame_4_loss_bbox_2": 1.63689, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.31773, "track.frame_4_loss_bbox_3": 1.61643, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.30944, "track.frame_4_loss_bbox_4": 1.61264, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.31865, "track.frame_4_loss_bbox_5": 1.60115, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.19679, "map.loss_bbox": 1.77353, "map.loss_iou": 1.92814, "map.loss_mask_things": 1.80535, "map.loss_mask_stuff": 0.07086, "map.d0.loss_mask_things_f": 1.81447, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.8022, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.79512, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80774, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06828, "map.d0.loss_cls_stuff_f": 0.10005, "map.d1.loss_mask_stuff_f": 0.09555, "map.d1.loss_cls_stuff_f": 0.09594, "map.d2.loss_mask_stuff_f": 0.06216, "map.d2.loss_cls_stuff_f": 0.09162, "map.d3.loss_mask_stuff_f": 0.06971, "map.d3.loss_cls_stuff_f": 0.08056, "map.d4.loss_mask_stuff_f": 0.06819, "map.d4.loss_cls_stuff_f": 0.09532, "map.d5.loss_mask_stuff_f": 0.07367, "map.d5.loss_cls_stuff_f": 0.10791, "map.d0.loss_cls": 1.70954, "map.d0.loss_bbox": 1.81155, "map.d0.loss_iou": 1.95302, "map.d1.loss_cls": 1.52172, "map.d1.loss_bbox": 1.80529, "map.d1.loss_iou": 1.94685, "map.d2.loss_cls": 1.25031, "map.d2.loss_bbox": 1.7912, "map.d2.loss_iou": 1.93741, "map.d3.loss_cls": 1.20251, "map.d3.loss_bbox": 1.78187, "map.d3.loss_iou": 1.93253, "map.d4.loss_cls": 1.23112, "map.d4.loss_bbox": 1.77805, "map.d4.loss_iou": 1.93149, "loss": 128.97255, "grad_norm": 737.21745, "time": 12.61748}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47387, "data_time": 0.12165, "track.frame_0_loss_cls_0": 0.60275, "track.frame_0_loss_bbox_0": 1.56894, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.60341, "track.frame_0_loss_bbox_1": 1.47035, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.59979, "track.frame_0_loss_bbox_2": 1.42871, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.59559, "track.frame_0_loss_bbox_3": 1.40563, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.59495, "track.frame_0_loss_bbox_4": 1.39216, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.59669, "track.frame_0_loss_bbox_5": 1.38862, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.63097, "track.frame_1_loss_bbox_0": 1.55477, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.62435, "track.frame_1_loss_bbox_1": 1.46598, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.61333, "track.frame_1_loss_bbox_2": 1.43337, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.60493, "track.frame_1_loss_bbox_3": 1.41949, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.60952, "track.frame_1_loss_bbox_4": 1.40057, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.61052, "track.frame_1_loss_bbox_5": 1.39582, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.61261, "track.frame_2_loss_bbox_0": 1.55764, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.607, "track.frame_2_loss_bbox_1": 1.46766, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.5952, "track.frame_2_loss_bbox_2": 1.42832, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.592, "track.frame_2_loss_bbox_3": 1.40722, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.59194, "track.frame_2_loss_bbox_4": 1.39532, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.59079, "track.frame_2_loss_bbox_5": 1.39187, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.60684, "track.frame_3_loss_bbox_0": 1.48448, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.59398, "track.frame_3_loss_bbox_1": 1.41202, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.58529, "track.frame_3_loss_bbox_2": 1.37481, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.58009, "track.frame_3_loss_bbox_3": 1.35834, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.58184, "track.frame_3_loss_bbox_4": 1.3469, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.58088, "track.frame_3_loss_bbox_5": 1.34253, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.61383, "track.frame_4_loss_bbox_0": 1.56205, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.58957, "track.frame_4_loss_bbox_1": 1.49101, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.57679, "track.frame_4_loss_bbox_2": 1.46564, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.57795, "track.frame_4_loss_bbox_3": 1.44824, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.57957, "track.frame_4_loss_bbox_4": 1.43874, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.58, "track.frame_4_loss_bbox_5": 1.4381, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.86049, "map.loss_bbox": 1.65868, "map.loss_iou": 2.0061, "map.loss_mask_things": 1.783, "map.loss_mask_stuff": 0.0427, "map.d0.loss_mask_things_f": 1.81673, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.80022, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.7835, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.78475, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.04428, "map.d0.loss_cls_stuff_f": 0.00107, "map.d1.loss_mask_stuff_f": 0.04578, "map.d1.loss_cls_stuff_f": 0.00043, "map.d2.loss_mask_stuff_f": 0.04098, "map.d2.loss_cls_stuff_f": 0.00026, "map.d3.loss_mask_stuff_f": 0.04277, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.04317, "map.d4.loss_cls_stuff_f": 0.0002, "map.d5.loss_mask_stuff_f": 0.04419, "map.d5.loss_cls_stuff_f": 0.00022, "map.d0.loss_cls": 1.33153, "map.d0.loss_bbox": 1.71694, "map.d0.loss_iou": 2.04215, "map.d1.loss_cls": 0.9524, "map.d1.loss_bbox": 1.69809, "map.d1.loss_iou": 2.02791, "map.d2.loss_cls": 0.86956, "map.d2.loss_bbox": 1.67689, "map.d2.loss_iou": 2.01551, "map.d3.loss_cls": 0.8529, "map.d3.loss_bbox": 1.66811, "map.d3.loss_iou": 2.00991, "map.d4.loss_cls": 0.8585, "map.d4.loss_bbox": 1.66359, "map.d4.loss_iou": 2.00826, "loss": 98.25019, "grad_norm": 110.15517, "time": 10.86737}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47387, "data_time": 0.12215, "track.frame_0_loss_cls_0": 0.5358, "track.frame_0_loss_bbox_0": 1.32314, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.53298, "track.frame_0_loss_bbox_1": 1.20352, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.52544, "track.frame_0_loss_bbox_2": 1.1612, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.51746, "track.frame_0_loss_bbox_3": 1.14419, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.52034, "track.frame_0_loss_bbox_4": 1.13275, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.52697, "track.frame_0_loss_bbox_5": 1.12993, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.52315, "track.frame_1_loss_bbox_0": 1.26249, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.51128, "track.frame_1_loss_bbox_1": 1.15955, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.50392, "track.frame_1_loss_bbox_2": 1.12598, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.49185, "track.frame_1_loss_bbox_3": 1.11168, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.49621, "track.frame_1_loss_bbox_4": 1.09844, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.49891, "track.frame_1_loss_bbox_5": 1.1002, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.49343, "track.frame_2_loss_bbox_0": 1.20669, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.48931, "track.frame_2_loss_bbox_1": 1.10476, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.47315, "track.frame_2_loss_bbox_2": 1.07387, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.46828, "track.frame_2_loss_bbox_3": 1.05566, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.46761, "track.frame_2_loss_bbox_4": 1.04686, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.47434, "track.frame_2_loss_bbox_5": 1.04212, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.49049, "track.frame_3_loss_bbox_0": 1.22326, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.48407, "track.frame_3_loss_bbox_1": 1.12952, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.46574, "track.frame_3_loss_bbox_2": 1.09705, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.45672, "track.frame_3_loss_bbox_3": 1.08446, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.45771, "track.frame_3_loss_bbox_4": 1.07951, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.46392, "track.frame_3_loss_bbox_5": 1.07507, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.4858, "track.frame_4_loss_bbox_0": 1.2245, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.48172, "track.frame_4_loss_bbox_1": 1.1301, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.46513, "track.frame_4_loss_bbox_2": 1.09945, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.45494, "track.frame_4_loss_bbox_3": 1.08803, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.45668, "track.frame_4_loss_bbox_4": 1.07571, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.45933, "track.frame_4_loss_bbox_5": 1.07486, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.88574, "map.loss_bbox": 1.6558, "map.loss_iou": 1.94247, "map.loss_mask_things": 1.75263, "map.loss_mask_stuff": 0.03986, "map.d0.loss_mask_things_f": 1.78867, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.77587, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.75394, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.76368, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.03842, "map.d0.loss_cls_stuff_f": 0.00011, "map.d1.loss_mask_stuff_f": 0.03891, "map.d1.loss_cls_stuff_f": 8e-05, "map.d2.loss_mask_stuff_f": 0.03712, "map.d2.loss_cls_stuff_f": 6e-05, "map.d3.loss_mask_stuff_f": 0.03892, "map.d3.loss_cls_stuff_f": 7e-05, "map.d4.loss_mask_stuff_f": 0.03814, "map.d4.loss_cls_stuff_f": 6e-05, "map.d5.loss_mask_stuff_f": 0.03868, "map.d5.loss_cls_stuff_f": 8e-05, "map.d0.loss_cls": 0.97247, "map.d0.loss_bbox": 1.71642, "map.d0.loss_iou": 1.98607, "map.d1.loss_cls": 0.83654, "map.d1.loss_bbox": 1.69026, "map.d1.loss_iou": 1.96688, "map.d2.loss_cls": 0.85264, "map.d2.loss_bbox": 1.66573, "map.d2.loss_iou": 1.95311, "map.d3.loss_cls": 0.86524, "map.d3.loss_bbox": 1.65808, "map.d3.loss_iou": 1.94403, "map.d4.loss_cls": 0.87098, "map.d4.loss_bbox": 1.65631, "map.d4.loss_iou": 1.94358, "loss": 84.70486, "grad_norm": 89.05234, "time": 10.74414}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47387, "data_time": 0.11976, "track.frame_0_loss_cls_0": 0.49876, "track.frame_0_loss_bbox_0": 1.13271, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.4859, "track.frame_0_loss_bbox_1": 0.98442, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.46675, "track.frame_0_loss_bbox_2": 0.95051, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.44277, "track.frame_0_loss_bbox_3": 0.94111, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.43669, "track.frame_0_loss_bbox_4": 0.93386, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.44215, "track.frame_0_loss_bbox_5": 0.93223, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.46793, "track.frame_1_loss_bbox_0": 1.09691, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.4529, "track.frame_1_loss_bbox_1": 0.9852, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.42973, "track.frame_1_loss_bbox_2": 0.95373, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.41472, "track.frame_1_loss_bbox_3": 0.9449, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.40773, "track.frame_1_loss_bbox_4": 0.93864, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.41154, "track.frame_1_loss_bbox_5": 0.93625, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.4484, "track.frame_2_loss_bbox_0": 1.11158, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.43876, "track.frame_2_loss_bbox_1": 1.00033, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.41876, "track.frame_2_loss_bbox_2": 0.96761, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.39352, "track.frame_2_loss_bbox_3": 0.96293, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.3892, "track.frame_2_loss_bbox_4": 0.95601, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.393, "track.frame_2_loss_bbox_5": 0.95228, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.4379, "track.frame_3_loss_bbox_0": 1.07249, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.44103, "track.frame_3_loss_bbox_1": 0.95678, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.41817, "track.frame_3_loss_bbox_2": 0.92972, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.39735, "track.frame_3_loss_bbox_3": 0.92453, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.39111, "track.frame_3_loss_bbox_4": 0.91902, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.39658, "track.frame_3_loss_bbox_5": 0.91532, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.43799, "track.frame_4_loss_bbox_0": 1.07723, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.42497, "track.frame_4_loss_bbox_1": 0.97261, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.401, "track.frame_4_loss_bbox_2": 0.94442, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.38337, "track.frame_4_loss_bbox_3": 0.93831, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.37916, "track.frame_4_loss_bbox_4": 0.93184, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.38135, "track.frame_4_loss_bbox_5": 0.92884, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.85197, "map.loss_bbox": 1.59017, "map.loss_iou": 1.9326, "map.loss_mask_things": 1.76462, "map.loss_mask_stuff": 0.03256, "map.d0.loss_mask_things_f": 1.79442, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.78825, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.76688, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.77842, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.03087, "map.d0.loss_cls_stuff_f": 7e-05, "map.d1.loss_mask_stuff_f": 0.03263, "map.d1.loss_cls_stuff_f": 8e-05, "map.d2.loss_mask_stuff_f": 0.03041, "map.d2.loss_cls_stuff_f": 5e-05, "map.d3.loss_mask_stuff_f": 0.03182, "map.d3.loss_cls_stuff_f": 7e-05, "map.d4.loss_mask_stuff_f": 0.03171, "map.d4.loss_cls_stuff_f": 5e-05, "map.d5.loss_mask_stuff_f": 0.03052, "map.d5.loss_cls_stuff_f": 7e-05, "map.d0.loss_cls": 0.81058, "map.d0.loss_bbox": 1.63713, "map.d0.loss_iou": 1.96365, "map.d1.loss_cls": 0.78655, "map.d1.loss_bbox": 1.61535, "map.d1.loss_iou": 1.94273, "map.d2.loss_cls": 0.815, "map.d2.loss_bbox": 1.5979, "map.d2.loss_iou": 1.93092, "map.d3.loss_cls": 0.84318, "map.d3.loss_bbox": 1.58984, "map.d3.loss_iou": 1.93041, "map.d4.loss_cls": 0.85192, "map.d4.loss_bbox": 1.58933, "map.d4.loss_iou": 1.93047, "loss": 77.24479, "grad_norm": 108.96685, "time": 14.27306}
