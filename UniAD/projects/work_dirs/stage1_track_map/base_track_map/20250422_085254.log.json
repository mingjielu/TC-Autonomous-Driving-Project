{"env_info": "sys.platform: linux\nPython: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:50:21) [GCC 12.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.13.1+gitcfc225a\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.4\n  - C++ Version: 201703\n  - Intel(R) oneAPI Math Kernel Library Version 2022.0-Product Build 20211112 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - HIP Runtime 6.2.41134\n  - MIOpen 3.2.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CXX_COMPILER=/opt/cache/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=OFF, USE_CUDNN=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, \n\nTorchVision: 0.14.0a0+befa256\nOpenCV: 4.8.1\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 60241134\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map.py"}
{"env_info": "sys.platform: linux\nPython: 3.9.19 | packaged by conda-forge | (main, Mar 20 2024, 12:50:21) [GCC 12.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.13.1+gitcfc225a\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.4\n  - C++ Version: 201703\n  - Intel(R) oneAPI Math Kernel Library Version 2022.0-Product Build 20211112 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - HIP Runtime 6.2.41134\n  - MIOpen 3.2.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CXX_COMPILER=/opt/cache/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=OFF, USE_CUDNN=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, \n\nTorchVision: 0.14.0a0+befa256\nOpenCV: 4.8.1\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 60241134\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "base_track_map.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 49162, "data_time": 1.41599, "track.frame_0_loss_cls_0": 1.38888, "track.frame_0_loss_bbox_0": 1.8926, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.21694, "track.frame_0_loss_bbox_1": 1.85029, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.19806, "track.frame_0_loss_bbox_2": 1.79453, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.15156, "track.frame_0_loss_bbox_3": 1.79842, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.19022, "track.frame_0_loss_bbox_4": 1.7907, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.17892, "track.frame_0_loss_bbox_5": 1.78698, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.5427, "track.frame_1_loss_bbox_0": 1.9088, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.41029, "track.frame_1_loss_bbox_1": 1.76545, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.39034, "track.frame_1_loss_bbox_2": 1.69447, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.34016, "track.frame_1_loss_bbox_3": 1.72175, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.35089, "track.frame_1_loss_bbox_4": 1.71469, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.31959, "track.frame_1_loss_bbox_5": 1.71031, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.78573, "track.frame_2_loss_bbox_0": 1.73274, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.49147, "track.frame_2_loss_bbox_1": 1.71384, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.42286, "track.frame_2_loss_bbox_2": 1.6949, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.37362, "track.frame_2_loss_bbox_3": 1.6757, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.37154, "track.frame_2_loss_bbox_4": 1.66315, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.36982, "track.frame_2_loss_bbox_5": 1.6414, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.80704, "track.frame_3_loss_bbox_0": 1.77332, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.54748, "track.frame_3_loss_bbox_1": 1.65053, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.56181, "track.frame_3_loss_bbox_2": 1.62947, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.48961, "track.frame_3_loss_bbox_3": 1.62044, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.52234, "track.frame_3_loss_bbox_4": 1.58515, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.50347, "track.frame_3_loss_bbox_5": 1.57731, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.79473, "track.frame_4_loss_bbox_0": 1.85725, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.62958, "track.frame_4_loss_bbox_1": 1.76027, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.69776, "track.frame_4_loss_bbox_2": 1.67338, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.64756, "track.frame_4_loss_bbox_3": 1.65511, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.69541, "track.frame_4_loss_bbox_4": 1.68595, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.69645, "track.frame_4_loss_bbox_5": 1.6626, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.22695, "map.loss_bbox": 1.89075, "map.loss_iou": 2.22439, "map.loss_mask_things": 1.79704, "map.loss_mask_stuff": 0.07459, "map.d0.loss_mask_things_f": 1.81623, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.8146, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.80102, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.8032, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06754, "map.d0.loss_cls_stuff_f": 0.1145, "map.d1.loss_mask_stuff_f": 0.10268, "map.d1.loss_cls_stuff_f": 0.10905, "map.d2.loss_mask_stuff_f": 0.06538, "map.d2.loss_cls_stuff_f": 0.10369, "map.d3.loss_mask_stuff_f": 0.07093, "map.d3.loss_cls_stuff_f": 0.08853, "map.d4.loss_mask_stuff_f": 0.07028, "map.d4.loss_cls_stuff_f": 0.10538, "map.d5.loss_mask_stuff_f": 0.07495, "map.d5.loss_cls_stuff_f": 0.12369, "map.d0.loss_cls": 1.73693, "map.d0.loss_bbox": 1.91867, "map.d0.loss_iou": 2.25326, "map.d1.loss_cls": 1.55497, "map.d1.loss_bbox": 1.91872, "map.d1.loss_iou": 2.24834, "map.d2.loss_cls": 1.26944, "map.d2.loss_bbox": 1.91153, "map.d2.loss_iou": 2.24194, "map.d3.loss_cls": 1.2224, "map.d3.loss_bbox": 1.90661, "map.d3.loss_iou": 2.23003, "map.d4.loss_cls": 1.27255, "map.d4.loss_bbox": 1.89885, "map.d4.loss_iou": 2.23024, "loss": 139.12817, "grad_norm": 1809.26797, "time": 17.89268}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 49162, "data_time": 1.40506, "track.frame_0_loss_cls_0": 1.38884, "track.frame_0_loss_bbox_0": 1.89261, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.21692, "track.frame_0_loss_bbox_1": 1.85028, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.19806, "track.frame_0_loss_bbox_2": 1.79453, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.15158, "track.frame_0_loss_bbox_3": 1.79843, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 1.19023, "track.frame_0_loss_bbox_4": 1.79072, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 1.17892, "track.frame_0_loss_bbox_5": 1.78701, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.54272, "track.frame_1_loss_bbox_0": 1.90874, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.40977, "track.frame_1_loss_bbox_1": 1.76548, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.38875, "track.frame_1_loss_bbox_2": 1.69478, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.33949, "track.frame_1_loss_bbox_3": 1.72165, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.35042, "track.frame_1_loss_bbox_4": 1.71463, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.31951, "track.frame_1_loss_bbox_5": 1.71043, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.78572, "track.frame_2_loss_bbox_0": 1.73273, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.49146, "track.frame_2_loss_bbox_1": 1.71387, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.42286, "track.frame_2_loss_bbox_2": 1.69491, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.37364, "track.frame_2_loss_bbox_3": 1.67571, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.37155, "track.frame_2_loss_bbox_4": 1.66316, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.36982, "track.frame_2_loss_bbox_5": 1.6414, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.80704, "track.frame_3_loss_bbox_0": 1.77331, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.54749, "track.frame_3_loss_bbox_1": 1.65051, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.56176, "track.frame_3_loss_bbox_2": 1.62945, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.48959, "track.frame_3_loss_bbox_3": 1.62043, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.52231, "track.frame_3_loss_bbox_4": 1.58514, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.50343, "track.frame_3_loss_bbox_5": 1.5773, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.79474, "track.frame_4_loss_bbox_0": 1.85724, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.62958, "track.frame_4_loss_bbox_1": 1.76025, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.69776, "track.frame_4_loss_bbox_2": 1.67335, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.6476, "track.frame_4_loss_bbox_3": 1.65509, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.69544, "track.frame_4_loss_bbox_4": 1.68593, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.69649, "track.frame_4_loss_bbox_5": 1.66257, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.22693, "map.loss_bbox": 1.89075, "map.loss_iou": 2.22439, "map.loss_mask_things": 1.79705, "map.loss_mask_stuff": 0.07459, "map.d0.loss_mask_things_f": 1.81622, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.8146, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.80102, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.80319, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06754, "map.d0.loss_cls_stuff_f": 0.11449, "map.d1.loss_mask_stuff_f": 0.10268, "map.d1.loss_cls_stuff_f": 0.10905, "map.d2.loss_mask_stuff_f": 0.06538, "map.d2.loss_cls_stuff_f": 0.10369, "map.d3.loss_mask_stuff_f": 0.07093, "map.d3.loss_cls_stuff_f": 0.08853, "map.d4.loss_mask_stuff_f": 0.07028, "map.d4.loss_cls_stuff_f": 0.10538, "map.d5.loss_mask_stuff_f": 0.07495, "map.d5.loss_cls_stuff_f": 0.1237, "map.d0.loss_cls": 1.73693, "map.d0.loss_bbox": 1.91867, "map.d0.loss_iou": 2.25326, "map.d1.loss_cls": 1.55496, "map.d1.loss_bbox": 1.91872, "map.d1.loss_iou": 2.24834, "map.d2.loss_cls": 1.26944, "map.d2.loss_bbox": 1.91153, "map.d2.loss_iou": 2.24194, "map.d3.loss_cls": 1.22237, "map.d3.loss_bbox": 1.90661, "map.d3.loss_iou": 2.23003, "map.d4.loss_cls": 1.27254, "map.d4.loss_bbox": 1.89885, "map.d4.loss_iou": 2.23024, "loss": 139.12494, "grad_norm": 1808.83208, "time": 20.67389}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 49229, "data_time": 0.10868, "track.frame_0_loss_cls_0": 0.76913, "track.frame_0_loss_bbox_0": 1.90351, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.77891, "track.frame_0_loss_bbox_1": 1.83966, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.71203, "track.frame_0_loss_bbox_2": 1.79919, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.70329, "track.frame_0_loss_bbox_3": 1.77547, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.69763, "track.frame_0_loss_bbox_4": 1.76182, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.70464, "track.frame_0_loss_bbox_5": 1.7642, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.8663, "track.frame_1_loss_bbox_0": 2.02718, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.8103, "track.frame_1_loss_bbox_1": 1.96544, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.78265, "track.frame_1_loss_bbox_2": 1.91563, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.74394, "track.frame_1_loss_bbox_3": 1.95025, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.77971, "track.frame_1_loss_bbox_4": 1.90594, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.7902, "track.frame_1_loss_bbox_5": 1.90083, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.84332, "track.frame_2_loss_bbox_0": 1.92018, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.76227, "track.frame_2_loss_bbox_1": 1.84123, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.7433, "track.frame_2_loss_bbox_2": 1.80401, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.73188, "track.frame_2_loss_bbox_3": 1.7748, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.73327, "track.frame_2_loss_bbox_4": 1.75631, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.73689, "track.frame_2_loss_bbox_5": 1.76097, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.83593, "track.frame_3_loss_bbox_0": 1.81091, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.76341, "track.frame_3_loss_bbox_1": 1.73134, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.73885, "track.frame_3_loss_bbox_2": 1.69726, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.73456, "track.frame_3_loss_bbox_3": 1.68152, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.73591, "track.frame_3_loss_bbox_4": 1.67883, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.73612, "track.frame_3_loss_bbox_5": 1.68176, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.75479, "track.frame_4_loss_bbox_0": 1.77332, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.6909, "track.frame_4_loss_bbox_1": 1.69521, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.63972, "track.frame_4_loss_bbox_2": 1.67371, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.62931, "track.frame_4_loss_bbox_3": 1.66693, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.64816, "track.frame_4_loss_bbox_4": 1.65444, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.66765, "track.frame_4_loss_bbox_5": 1.6493, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.93202, "map.loss_bbox": 1.97595, "map.loss_iou": 2.0388, "map.loss_mask_things": 1.69122, "map.loss_mask_stuff": 0.09608, "map.d0.loss_mask_things_f": 1.73114, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70767, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69531, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68812, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.09379, "map.d0.loss_cls_stuff_f": 0.0043, "map.d1.loss_mask_stuff_f": 0.10355, "map.d1.loss_cls_stuff_f": 0.00223, "map.d2.loss_mask_stuff_f": 0.08799, "map.d2.loss_cls_stuff_f": 0.00161, "map.d3.loss_mask_stuff_f": 0.10016, "map.d3.loss_cls_stuff_f": 0.00094, "map.d4.loss_mask_stuff_f": 0.09664, "map.d4.loss_cls_stuff_f": 0.00125, "map.d5.loss_mask_stuff_f": 0.10567, "map.d5.loss_cls_stuff_f": 0.00149, "map.d0.loss_cls": 1.40112, "map.d0.loss_bbox": 2.03959, "map.d0.loss_iou": 2.07432, "map.d1.loss_cls": 1.09396, "map.d1.loss_bbox": 2.02926, "map.d1.loss_iou": 2.06713, "map.d2.loss_cls": 0.99292, "map.d2.loss_bbox": 2.0031, "map.d2.loss_iou": 2.05889, "map.d3.loss_cls": 1.04348, "map.d3.loss_bbox": 1.98644, "map.d3.loss_iou": 2.05206, "map.d4.loss_cls": 0.92377, "map.d4.loss_bbox": 1.9805, "map.d4.loss_iou": 2.04584, "loss": 115.97441, "grad_norm": 398.11784, "time": 16.91037}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 49229, "data_time": 0.09802, "track.frame_0_loss_cls_0": 0.76892, "track.frame_0_loss_bbox_0": 1.90419, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.77815, "track.frame_0_loss_bbox_1": 1.8408, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.71165, "track.frame_0_loss_bbox_2": 1.79937, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.70124, "track.frame_0_loss_bbox_3": 1.77652, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.69736, "track.frame_0_loss_bbox_4": 1.76113, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.70382, "track.frame_0_loss_bbox_5": 1.76401, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.86345, "track.frame_1_loss_bbox_0": 2.02949, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.80861, "track.frame_1_loss_bbox_1": 1.96546, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.78154, "track.frame_1_loss_bbox_2": 1.91562, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.74291, "track.frame_1_loss_bbox_3": 1.95007, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.77905, "track.frame_1_loss_bbox_4": 1.90472, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.78838, "track.frame_1_loss_bbox_5": 1.90066, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.84274, "track.frame_2_loss_bbox_0": 1.92136, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.76185, "track.frame_2_loss_bbox_1": 1.84226, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.74252, "track.frame_2_loss_bbox_2": 1.80443, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.73109, "track.frame_2_loss_bbox_3": 1.77497, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.73205, "track.frame_2_loss_bbox_4": 1.75664, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.73541, "track.frame_2_loss_bbox_5": 1.7612, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.83714, "track.frame_3_loss_bbox_0": 1.8104, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.76017, "track.frame_3_loss_bbox_1": 1.73028, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.73572, "track.frame_3_loss_bbox_2": 1.6982, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.73347, "track.frame_3_loss_bbox_3": 1.67902, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.73033, "track.frame_3_loss_bbox_4": 1.68067, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.73581, "track.frame_3_loss_bbox_5": 1.67847, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.75111, "track.frame_4_loss_bbox_0": 1.77231, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.68413, "track.frame_4_loss_bbox_1": 1.69941, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.6386, "track.frame_4_loss_bbox_2": 1.67634, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.62534, "track.frame_4_loss_bbox_3": 1.66905, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.64533, "track.frame_4_loss_bbox_4": 1.65635, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.66499, "track.frame_4_loss_bbox_5": 1.65042, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.93262, "map.loss_bbox": 1.97594, "map.loss_iou": 2.03885, "map.loss_mask_things": 1.69027, "map.loss_mask_stuff": 0.09605, "map.d0.loss_mask_things_f": 1.73195, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.70748, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69572, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68905, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.09383, "map.d0.loss_cls_stuff_f": 0.0043, "map.d1.loss_mask_stuff_f": 0.10354, "map.d1.loss_cls_stuff_f": 0.00223, "map.d2.loss_mask_stuff_f": 0.08792, "map.d2.loss_cls_stuff_f": 0.00161, "map.d3.loss_mask_stuff_f": 0.09995, "map.d3.loss_cls_stuff_f": 0.00093, "map.d4.loss_mask_stuff_f": 0.09659, "map.d4.loss_cls_stuff_f": 0.00125, "map.d5.loss_mask_stuff_f": 0.10511, "map.d5.loss_cls_stuff_f": 0.00149, "map.d0.loss_cls": 1.40121, "map.d0.loss_bbox": 2.0396, "map.d0.loss_iou": 2.07437, "map.d1.loss_cls": 1.09322, "map.d1.loss_bbox": 2.02925, "map.d1.loss_iou": 2.06718, "map.d2.loss_cls": 0.99272, "map.d2.loss_bbox": 2.00313, "map.d2.loss_iou": 2.0589, "map.d3.loss_cls": 1.0438, "map.d3.loss_bbox": 1.98645, "map.d3.loss_iou": 2.05205, "map.d4.loss_cls": 0.92452, "map.d4.loss_bbox": 1.98051, "map.d4.loss_iou": 2.04582, "loss": 115.93609, "grad_norm": 393.85806, "time": 16.61782}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 49263, "data_time": 0.12433, "track.frame_0_loss_cls_0": 0.62669, "track.frame_0_loss_bbox_0": 1.43573, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.59907, "track.frame_0_loss_bbox_1": 1.30198, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.60508, "track.frame_0_loss_bbox_2": 1.25394, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.60265, "track.frame_0_loss_bbox_3": 1.24755, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.61736, "track.frame_0_loss_bbox_4": 1.22226, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.62095, "track.frame_0_loss_bbox_5": 1.20453, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.62227, "track.frame_1_loss_bbox_0": 1.50265, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.5841, "track.frame_1_loss_bbox_1": 1.35856, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.5834, "track.frame_1_loss_bbox_2": 1.29462, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.578, "track.frame_1_loss_bbox_3": 1.26455, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.59205, "track.frame_1_loss_bbox_4": 1.22676, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.59079, "track.frame_1_loss_bbox_5": 1.21802, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.61148, "track.frame_2_loss_bbox_0": 1.49432, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.59101, "track.frame_2_loss_bbox_1": 1.36886, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.59917, "track.frame_2_loss_bbox_2": 1.30843, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.58301, "track.frame_2_loss_bbox_3": 1.29689, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.57643, "track.frame_2_loss_bbox_4": 1.28465, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.56874, "track.frame_2_loss_bbox_5": 1.27738, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.59222, "track.frame_3_loss_bbox_0": 1.46219, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.57308, "track.frame_3_loss_bbox_1": 1.35765, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.57701, "track.frame_3_loss_bbox_2": 1.30799, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.57431, "track.frame_3_loss_bbox_3": 1.27317, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.56492, "track.frame_3_loss_bbox_4": 1.26434, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.5618, "track.frame_3_loss_bbox_5": 1.25523, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.57162, "track.frame_4_loss_bbox_0": 1.57151, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.58361, "track.frame_4_loss_bbox_1": 1.40958, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.5847, "track.frame_4_loss_bbox_2": 1.35047, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.59048, "track.frame_4_loss_bbox_3": 1.32371, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.59849, "track.frame_4_loss_bbox_4": 1.30462, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.60237, "track.frame_4_loss_bbox_5": 1.30525, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.94088, "map.loss_bbox": 1.96945, "map.loss_iou": 1.8093, "map.loss_mask_things": 1.70267, "map.loss_mask_stuff": 0.06485, "map.d0.loss_mask_things_f": 1.74651, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.71482, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69362, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70193, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06354, "map.d0.loss_cls_stuff_f": 0.00023, "map.d1.loss_mask_stuff_f": 0.07212, "map.d1.loss_cls_stuff_f": 0.00025, "map.d2.loss_mask_stuff_f": 0.07008, "map.d2.loss_cls_stuff_f": 0.00019, "map.d3.loss_mask_stuff_f": 0.06592, "map.d3.loss_cls_stuff_f": 0.00022, "map.d4.loss_mask_stuff_f": 0.07211, "map.d4.loss_cls_stuff_f": 0.00023, "map.d5.loss_mask_stuff_f": 0.06549, "map.d5.loss_cls_stuff_f": 0.00028, "map.d0.loss_cls": 1.17042, "map.d0.loss_bbox": 2.01776, "map.d0.loss_iou": 1.83933, "map.d1.loss_cls": 0.89306, "map.d1.loss_bbox": 2.00646, "map.d1.loss_iou": 1.83457, "map.d2.loss_cls": 0.89398, "map.d2.loss_bbox": 1.98386, "map.d2.loss_iou": 1.82101, "map.d3.loss_cls": 0.92366, "map.d3.loss_bbox": 1.97792, "map.d3.loss_iou": 1.81583, "map.d4.loss_cls": 0.9555, "map.d4.loss_bbox": 1.97301, "map.d4.loss_iou": 1.81273, "loss": 95.14803, "grad_norm": 279.20569, "time": 14.9249}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 49261, "data_time": 1.57031, "track.frame_0_loss_cls_0": 0.61814, "track.frame_0_loss_bbox_0": 1.42376, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.6067, "track.frame_0_loss_bbox_1": 1.29015, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.60845, "track.frame_0_loss_bbox_2": 1.2394, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.60658, "track.frame_0_loss_bbox_3": 1.22105, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.61644, "track.frame_0_loss_bbox_4": 1.19144, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.61188, "track.frame_0_loss_bbox_5": 1.18496, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.62717, "track.frame_1_loss_bbox_0": 1.50313, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.58426, "track.frame_1_loss_bbox_1": 1.36909, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.58328, "track.frame_1_loss_bbox_2": 1.31174, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.58053, "track.frame_1_loss_bbox_3": 1.28055, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.59629, "track.frame_1_loss_bbox_4": 1.24749, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.60139, "track.frame_1_loss_bbox_5": 1.23131, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.61315, "track.frame_2_loss_bbox_0": 1.49416, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.59925, "track.frame_2_loss_bbox_1": 1.3866, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.58926, "track.frame_2_loss_bbox_2": 1.33032, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.57558, "track.frame_2_loss_bbox_3": 1.31795, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.57651, "track.frame_2_loss_bbox_4": 1.30854, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.5716, "track.frame_2_loss_bbox_5": 1.30125, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.585, "track.frame_3_loss_bbox_0": 1.48367, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.57673, "track.frame_3_loss_bbox_1": 1.3406, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.57292, "track.frame_3_loss_bbox_2": 1.30038, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.56133, "track.frame_3_loss_bbox_3": 1.27634, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.5609, "track.frame_3_loss_bbox_4": 1.26356, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.56627, "track.frame_3_loss_bbox_5": 1.25348, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.55485, "track.frame_4_loss_bbox_0": 1.55589, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.56709, "track.frame_4_loss_bbox_1": 1.38035, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.55959, "track.frame_4_loss_bbox_2": 1.34358, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.55834, "track.frame_4_loss_bbox_3": 1.32838, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.5578, "track.frame_4_loss_bbox_4": 1.32, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.57511, "track.frame_4_loss_bbox_5": 1.30889, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.94801, "map.loss_bbox": 1.9679, "map.loss_iou": 1.80811, "map.loss_mask_things": 1.7024, "map.loss_mask_stuff": 0.06502, "map.d0.loss_mask_things_f": 1.75051, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.71342, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69133, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.69974, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.06381, "map.d0.loss_cls_stuff_f": 0.00024, "map.d1.loss_mask_stuff_f": 0.07296, "map.d1.loss_cls_stuff_f": 0.00025, "map.d2.loss_mask_stuff_f": 0.07035, "map.d2.loss_cls_stuff_f": 0.00019, "map.d3.loss_mask_stuff_f": 0.0658, "map.d3.loss_cls_stuff_f": 0.00022, "map.d4.loss_mask_stuff_f": 0.07189, "map.d4.loss_cls_stuff_f": 0.00023, "map.d5.loss_mask_stuff_f": 0.06667, "map.d5.loss_cls_stuff_f": 0.00028, "map.d0.loss_cls": 1.16529, "map.d0.loss_bbox": 2.01824, "map.d0.loss_iou": 1.84033, "map.d1.loss_cls": 0.89452, "map.d1.loss_bbox": 2.00879, "map.d1.loss_iou": 1.83327, "map.d2.loss_cls": 0.89587, "map.d2.loss_bbox": 1.98599, "map.d2.loss_iou": 1.8217, "map.d3.loss_cls": 0.92601, "map.d3.loss_bbox": 1.97775, "map.d3.loss_iou": 1.81291, "map.d4.loss_cls": 0.95216, "map.d4.loss_bbox": 1.97451, "map.d4.loss_iou": 1.81189, "loss": 95.02896, "grad_norm": 272.69571, "time": 18.84371}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 49263, "data_time": 0.14926, "track.frame_0_loss_cls_0": 0.65653, "track.frame_0_loss_bbox_0": 1.74678, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.64275, "track.frame_0_loss_bbox_1": 1.6418, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.63698, "track.frame_0_loss_bbox_2": 1.56976, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.61862, "track.frame_0_loss_bbox_3": 1.54311, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.63838, "track.frame_0_loss_bbox_4": 1.53118, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.64381, "track.frame_0_loss_bbox_5": 1.52229, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.66936, "track.frame_1_loss_bbox_0": 1.67006, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.65628, "track.frame_1_loss_bbox_1": 1.52936, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.64041, "track.frame_1_loss_bbox_2": 1.47485, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.6503, "track.frame_1_loss_bbox_3": 1.41011, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.66227, "track.frame_1_loss_bbox_4": 1.39784, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.64856, "track.frame_1_loss_bbox_5": 1.40284, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.63803, "track.frame_2_loss_bbox_0": 1.67254, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.61452, "track.frame_2_loss_bbox_1": 1.54114, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.65389, "track.frame_2_loss_bbox_2": 1.47986, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.63771, "track.frame_2_loss_bbox_3": 1.46607, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.6531, "track.frame_2_loss_bbox_4": 1.4558, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.65929, "track.frame_2_loss_bbox_5": 1.43846, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.61709, "track.frame_3_loss_bbox_0": 1.6087, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.6014, "track.frame_3_loss_bbox_1": 1.45355, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.63843, "track.frame_3_loss_bbox_2": 1.40047, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.63948, "track.frame_3_loss_bbox_3": 1.37741, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.65305, "track.frame_3_loss_bbox_4": 1.35012, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.64326, "track.frame_3_loss_bbox_5": 1.34925, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.62644, "track.frame_4_loss_bbox_0": 1.71054, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.60701, "track.frame_4_loss_bbox_1": 1.5878, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.61952, "track.frame_4_loss_bbox_2": 1.54082, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.62784, "track.frame_4_loss_bbox_3": 1.52863, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.64019, "track.frame_4_loss_bbox_4": 1.50624, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.66807, "track.frame_4_loss_bbox_5": 1.48317, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.95215, "map.loss_bbox": 2.01414, "map.loss_iou": 1.87671, "map.loss_mask_things": 1.65626, "map.loss_mask_stuff": 0.08372, "map.d0.loss_mask_things_f": 1.69751, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.67743, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.67378, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.6747, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08425, "map.d0.loss_cls_stuff_f": 0.00022, "map.d1.loss_mask_stuff_f": 0.0734, "map.d1.loss_cls_stuff_f": 0.00024, "map.d2.loss_mask_stuff_f": 0.07272, "map.d2.loss_cls_stuff_f": 0.00021, "map.d3.loss_mask_stuff_f": 0.0813, "map.d3.loss_cls_stuff_f": 0.00028, "map.d4.loss_mask_stuff_f": 0.06793, "map.d4.loss_cls_stuff_f": 0.00025, "map.d5.loss_mask_stuff_f": 0.08376, "map.d5.loss_cls_stuff_f": 0.00026, "map.d0.loss_cls": 0.98734, "map.d0.loss_bbox": 2.07169, "map.d0.loss_iou": 1.91091, "map.d1.loss_cls": 0.85978, "map.d1.loss_bbox": 2.06251, "map.d1.loss_iou": 1.90093, "map.d2.loss_cls": 0.93901, "map.d2.loss_bbox": 2.02794, "map.d2.loss_iou": 1.88009, "map.d3.loss_cls": 0.96447, "map.d3.loss_bbox": 2.02456, "map.d3.loss_iou": 1.8735, "map.d4.loss_cls": 0.96467, "map.d4.loss_bbox": 2.02067, "map.d4.loss_iou": 1.87038, "loss": 102.72278, "grad_norm": 361.41111, "time": 18.2323}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 49261, "data_time": 0.11707, "track.frame_0_loss_cls_0": 0.65574, "track.frame_0_loss_bbox_0": 1.74201, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.66176, "track.frame_0_loss_bbox_1": 1.55439, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.63371, "track.frame_0_loss_bbox_2": 1.50622, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.62807, "track.frame_0_loss_bbox_3": 1.48009, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.64736, "track.frame_0_loss_bbox_4": 1.44942, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.64624, "track.frame_0_loss_bbox_5": 1.44096, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.63793, "track.frame_1_loss_bbox_0": 1.55676, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.65691, "track.frame_1_loss_bbox_1": 1.42607, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.66384, "track.frame_1_loss_bbox_2": 1.37224, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.66433, "track.frame_1_loss_bbox_3": 1.35121, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.67131, "track.frame_1_loss_bbox_4": 1.32876, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.65933, "track.frame_1_loss_bbox_5": 1.31733, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.61872, "track.frame_2_loss_bbox_0": 1.6292, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.62029, "track.frame_2_loss_bbox_1": 1.50465, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.64435, "track.frame_2_loss_bbox_2": 1.46354, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.64074, "track.frame_2_loss_bbox_3": 1.45037, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.64199, "track.frame_2_loss_bbox_4": 1.4452, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.648, "track.frame_2_loss_bbox_5": 1.44351, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.60375, "track.frame_3_loss_bbox_0": 1.64293, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.63138, "track.frame_3_loss_bbox_1": 1.54489, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.65881, "track.frame_3_loss_bbox_2": 1.48444, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.68154, "track.frame_3_loss_bbox_3": 1.4528, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.69979, "track.frame_3_loss_bbox_4": 1.43577, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.7029, "track.frame_3_loss_bbox_5": 1.42961, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.67303, "track.frame_4_loss_bbox_0": 1.70726, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.67082, "track.frame_4_loss_bbox_1": 1.62253, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.69622, "track.frame_4_loss_bbox_2": 1.59631, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.70875, "track.frame_4_loss_bbox_3": 1.59028, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.71884, "track.frame_4_loss_bbox_4": 1.56643, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.72138, "track.frame_4_loss_bbox_5": 1.57254, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.97198, "map.loss_bbox": 2.02158, "map.loss_iou": 1.87309, "map.loss_mask_things": 1.66052, "map.loss_mask_stuff": 0.08324, "map.d0.loss_mask_things_f": 1.70447, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.66861, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.67381, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.68377, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08305, "map.d0.loss_cls_stuff_f": 0.00021, "map.d1.loss_mask_stuff_f": 0.07496, "map.d1.loss_cls_stuff_f": 0.00022, "map.d2.loss_mask_stuff_f": 0.07228, "map.d2.loss_cls_stuff_f": 0.00021, "map.d3.loss_mask_stuff_f": 0.08212, "map.d3.loss_cls_stuff_f": 0.00027, "map.d4.loss_mask_stuff_f": 0.06867, "map.d4.loss_cls_stuff_f": 0.00023, "map.d5.loss_mask_stuff_f": 0.08178, "map.d5.loss_cls_stuff_f": 0.00025, "map.d0.loss_cls": 0.96998, "map.d0.loss_bbox": 2.08152, "map.d0.loss_iou": 1.91857, "map.d1.loss_cls": 0.85608, "map.d1.loss_bbox": 2.06141, "map.d1.loss_iou": 1.90461, "map.d2.loss_cls": 0.93159, "map.d2.loss_bbox": 2.02942, "map.d2.loss_iou": 1.88192, "map.d3.loss_cls": 0.94709, "map.d3.loss_bbox": 2.02704, "map.d3.loss_iou": 1.87712, "map.d4.loss_cls": 0.95622, "map.d4.loss_bbox": 2.02231, "map.d4.loss_iou": 1.87379, "loss": 103.05955, "grad_norm": 371.73764, "time": 16.37132}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 49444, "data_time": 0.12428, "track.frame_0_loss_cls_0": 0.60788, "track.frame_0_loss_bbox_0": 1.30515, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.59414, "track.frame_0_loss_bbox_1": 1.13911, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.58298, "track.frame_0_loss_bbox_2": 1.12769, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.56757, "track.frame_0_loss_bbox_3": 1.15103, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.59555, "track.frame_0_loss_bbox_4": 1.1267, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.60433, "track.frame_0_loss_bbox_5": 1.13186, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.58236, "track.frame_1_loss_bbox_0": 1.21235, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.55811, "track.frame_1_loss_bbox_1": 1.03647, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.56479, "track.frame_1_loss_bbox_2": 0.99768, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.54362, "track.frame_1_loss_bbox_3": 1.0023, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.54725, "track.frame_1_loss_bbox_4": 0.99716, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.55304, "track.frame_1_loss_bbox_5": 0.98525, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.54485, "track.frame_2_loss_bbox_0": 1.17882, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.53055, "track.frame_2_loss_bbox_1": 1.04263, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.53569, "track.frame_2_loss_bbox_2": 0.99868, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.52671, "track.frame_2_loss_bbox_3": 0.99492, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.5374, "track.frame_2_loss_bbox_4": 0.98412, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.55905, "track.frame_2_loss_bbox_5": 0.96205, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.52892, "track.frame_3_loss_bbox_0": 1.20124, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.5108, "track.frame_3_loss_bbox_1": 1.05136, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.5044, "track.frame_3_loss_bbox_2": 0.99271, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.4899, "track.frame_3_loss_bbox_3": 0.97939, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.49857, "track.frame_3_loss_bbox_4": 0.97206, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.49958, "track.frame_3_loss_bbox_5": 0.97932, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.49875, "track.frame_4_loss_bbox_0": 1.14339, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.52715, "track.frame_4_loss_bbox_1": 0.99824, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.48901, "track.frame_4_loss_bbox_2": 0.93561, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.46434, "track.frame_4_loss_bbox_3": 0.93265, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.46926, "track.frame_4_loss_bbox_4": 0.91398, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.47366, "track.frame_4_loss_bbox_5": 0.9077, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.87208, "map.loss_bbox": 1.66601, "map.loss_iou": 1.85145, "map.loss_mask_things": 1.78995, "map.loss_mask_stuff": 0.03502, "map.d0.loss_mask_things_f": 1.80421, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79103, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.77311, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.78534, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.03556, "map.d0.loss_cls_stuff_f": 0.00013, "map.d1.loss_mask_stuff_f": 0.03517, "map.d1.loss_cls_stuff_f": 0.00017, "map.d2.loss_mask_stuff_f": 0.03185, "map.d2.loss_cls_stuff_f": 0.00014, "map.d3.loss_mask_stuff_f": 0.03796, "map.d3.loss_cls_stuff_f": 0.00014, "map.d4.loss_mask_stuff_f": 0.033, "map.d4.loss_cls_stuff_f": 0.00013, "map.d5.loss_mask_stuff_f": 0.03397, "map.d5.loss_cls_stuff_f": 0.00011, "map.d0.loss_cls": 0.89707, "map.d0.loss_bbox": 1.6504, "map.d0.loss_iou": 1.89305, "map.d1.loss_cls": 0.79806, "map.d1.loss_bbox": 1.64229, "map.d1.loss_iou": 1.87567, "map.d2.loss_cls": 0.85654, "map.d2.loss_bbox": 1.6331, "map.d2.loss_iou": 1.84478, "map.d3.loss_cls": 0.89722, "map.d3.loss_bbox": 1.6398, "map.d3.loss_iou": 1.84457, "map.d4.loss_cls": 0.89008, "map.d4.loss_bbox": 1.65887, "map.d4.loss_iou": 1.84894, "loss": 82.91885, "grad_norm": 275.88749, "time": 17.0804}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 49449, "data_time": 0.13258, "track.frame_0_loss_cls_0": 0.59877, "track.frame_0_loss_bbox_0": 1.30022, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.5804, "track.frame_0_loss_bbox_1": 1.15096, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.57233, "track.frame_0_loss_bbox_2": 1.08537, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.5516, "track.frame_0_loss_bbox_3": 1.0947, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.55888, "track.frame_0_loss_bbox_4": 1.08011, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.56468, "track.frame_0_loss_bbox_5": 1.0744, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.565, "track.frame_1_loss_bbox_0": 1.23141, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.5574, "track.frame_1_loss_bbox_1": 1.0363, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.55878, "track.frame_1_loss_bbox_2": 0.98825, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.5441, "track.frame_1_loss_bbox_3": 0.97841, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.55856, "track.frame_1_loss_bbox_4": 0.96492, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.56493, "track.frame_1_loss_bbox_5": 0.95257, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.55692, "track.frame_2_loss_bbox_0": 1.20394, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.54682, "track.frame_2_loss_bbox_1": 1.03401, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.5497, "track.frame_2_loss_bbox_2": 0.97956, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.52916, "track.frame_2_loss_bbox_3": 0.97055, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.53968, "track.frame_2_loss_bbox_4": 0.95036, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.54932, "track.frame_2_loss_bbox_5": 0.93571, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.4999, "track.frame_3_loss_bbox_0": 1.19226, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.49224, "track.frame_3_loss_bbox_1": 1.03522, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.49017, "track.frame_3_loss_bbox_2": 0.98776, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.46913, "track.frame_3_loss_bbox_3": 0.97406, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.48353, "track.frame_3_loss_bbox_4": 0.95242, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.49299, "track.frame_3_loss_bbox_5": 0.94316, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.50995, "track.frame_4_loss_bbox_0": 1.20073, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.51111, "track.frame_4_loss_bbox_1": 1.05207, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.50863, "track.frame_4_loss_bbox_2": 1.00106, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.49954, "track.frame_4_loss_bbox_3": 0.98106, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.50292, "track.frame_4_loss_bbox_4": 0.96612, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.51287, "track.frame_4_loss_bbox_5": 0.96961, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.8728, "map.loss_bbox": 1.6665, "map.loss_iou": 1.84452, "map.loss_mask_things": 1.79301, "map.loss_mask_stuff": 0.03562, "map.d0.loss_mask_things_f": 1.8052, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79375, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.77126, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.78295, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.03553, "map.d0.loss_cls_stuff_f": 0.00012, "map.d1.loss_mask_stuff_f": 0.03612, "map.d1.loss_cls_stuff_f": 0.00016, "map.d2.loss_mask_stuff_f": 0.03268, "map.d2.loss_cls_stuff_f": 0.00014, "map.d3.loss_mask_stuff_f": 0.03785, "map.d3.loss_cls_stuff_f": 0.00015, "map.d4.loss_mask_stuff_f": 0.03356, "map.d4.loss_cls_stuff_f": 0.00013, "map.d5.loss_mask_stuff_f": 0.03368, "map.d5.loss_cls_stuff_f": 0.00012, "map.d0.loss_cls": 0.90546, "map.d0.loss_bbox": 1.64734, "map.d0.loss_iou": 1.89669, "map.d1.loss_cls": 0.79787, "map.d1.loss_bbox": 1.64972, "map.d1.loss_iou": 1.87277, "map.d2.loss_cls": 0.85315, "map.d2.loss_bbox": 1.63486, "map.d2.loss_iou": 1.84891, "map.d3.loss_cls": 0.89921, "map.d3.loss_bbox": 1.63926, "map.d3.loss_iou": 1.845, "map.d4.loss_cls": 0.90104, "map.d4.loss_bbox": 1.65639, "map.d4.loss_iou": 1.84102, "loss": 82.75183, "grad_norm": 266.52583, "time": 18.80532}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 49444, "data_time": 0.15017, "track.frame_0_loss_cls_0": 0.53662, "track.frame_0_loss_bbox_0": 1.25578, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.55867, "track.frame_0_loss_bbox_1": 1.12853, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.53313, "track.frame_0_loss_bbox_2": 1.08631, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.52448, "track.frame_0_loss_bbox_3": 1.08177, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.52913, "track.frame_0_loss_bbox_4": 1.09227, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.54299, "track.frame_0_loss_bbox_5": 1.0819, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.53437, "track.frame_1_loss_bbox_0": 1.20049, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.54282, "track.frame_1_loss_bbox_1": 1.12301, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.55639, "track.frame_1_loss_bbox_2": 1.13445, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.56675, "track.frame_1_loss_bbox_3": 1.1433, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.55531, "track.frame_1_loss_bbox_4": 1.14372, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.55765, "track.frame_1_loss_bbox_5": 1.15553, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.58364, "track.frame_2_loss_bbox_0": 1.18206, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.62851, "track.frame_2_loss_bbox_1": 1.07634, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.60389, "track.frame_2_loss_bbox_2": 1.01555, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.59327, "track.frame_2_loss_bbox_3": 1.02325, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.5708, "track.frame_2_loss_bbox_4": 1.025, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.56889, "track.frame_2_loss_bbox_5": 1.0286, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.58848, "track.frame_3_loss_bbox_0": 1.26573, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.63595, "track.frame_3_loss_bbox_1": 1.17908, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.60553, "track.frame_3_loss_bbox_2": 1.15811, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.62474, "track.frame_3_loss_bbox_3": 1.15208, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.61426, "track.frame_3_loss_bbox_4": 1.15475, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.61612, "track.frame_3_loss_bbox_5": 1.14958, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.59559, "track.frame_4_loss_bbox_0": 1.22112, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.63046, "track.frame_4_loss_bbox_1": 1.07909, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.58946, "track.frame_4_loss_bbox_2": 1.03836, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.56807, "track.frame_4_loss_bbox_3": 1.04239, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.57265, "track.frame_4_loss_bbox_4": 1.04335, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.56143, "track.frame_4_loss_bbox_5": 1.05277, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.93401, "map.loss_bbox": 1.90454, "map.loss_iou": 1.94031, "map.loss_mask_things": 1.67014, "map.loss_mask_stuff": 0.04597, "map.d0.loss_mask_things_f": 1.69571, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.69094, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.6689, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.67296, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.0465, "map.d0.loss_cls_stuff_f": 0.0002, "map.d1.loss_mask_stuff_f": 0.04742, "map.d1.loss_cls_stuff_f": 0.00022, "map.d2.loss_mask_stuff_f": 0.04571, "map.d2.loss_cls_stuff_f": 0.0003, "map.d3.loss_mask_stuff_f": 0.04788, "map.d3.loss_cls_stuff_f": 0.00025, "map.d4.loss_mask_stuff_f": 0.0466, "map.d4.loss_cls_stuff_f": 0.00019, "map.d5.loss_mask_stuff_f": 0.04984, "map.d5.loss_cls_stuff_f": 0.00018, "map.d0.loss_cls": 0.89348, "map.d0.loss_bbox": 1.99215, "map.d0.loss_iou": 2.06344, "map.d1.loss_cls": 0.85881, "map.d1.loss_bbox": 1.95514, "map.d1.loss_iou": 2.02152, "map.d2.loss_cls": 0.88069, "map.d2.loss_bbox": 1.92165, "map.d2.loss_iou": 1.97858, "map.d3.loss_cls": 0.91992, "map.d3.loss_bbox": 1.90934, "map.d3.loss_iou": 1.95974, "map.d4.loss_cls": 0.91252, "map.d4.loss_bbox": 1.90327, "map.d4.loss_iou": 1.95365, "loss": 88.43704, "grad_norm": 439.9332, "time": 15.88576}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 8e-05, "memory": 49449, "data_time": 0.12507, "track.frame_0_loss_cls_0": 0.53582, "track.frame_0_loss_bbox_0": 1.23983, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.55575, "track.frame_0_loss_bbox_1": 1.09903, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.54607, "track.frame_0_loss_bbox_2": 1.05767, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.5391, "track.frame_0_loss_bbox_3": 1.06216, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.53816, "track.frame_0_loss_bbox_4": 1.05938, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.54137, "track.frame_0_loss_bbox_5": 1.06091, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.53161, "track.frame_1_loss_bbox_0": 1.25744, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.57622, "track.frame_1_loss_bbox_1": 1.12504, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.55786, "track.frame_1_loss_bbox_2": 1.08593, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.5624, "track.frame_1_loss_bbox_3": 1.08326, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.57403, "track.frame_1_loss_bbox_4": 1.07915, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.56806, "track.frame_1_loss_bbox_5": 1.08244, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.60746, "track.frame_2_loss_bbox_0": 1.23088, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.60086, "track.frame_2_loss_bbox_1": 1.08504, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.55429, "track.frame_2_loss_bbox_2": 1.02858, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.52685, "track.frame_2_loss_bbox_3": 1.01375, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.50888, "track.frame_2_loss_bbox_4": 1.01619, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.5078, "track.frame_2_loss_bbox_5": 1.00787, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.58102, "track.frame_3_loss_bbox_0": 1.26, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.63793, "track.frame_3_loss_bbox_1": 1.17444, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.59108, "track.frame_3_loss_bbox_2": 1.1256, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.56937, "track.frame_3_loss_bbox_3": 1.12953, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.55089, "track.frame_3_loss_bbox_4": 1.11613, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.55479, "track.frame_3_loss_bbox_5": 1.11914, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.61783, "track.frame_4_loss_bbox_0": 1.22675, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.62721, "track.frame_4_loss_bbox_1": 1.11075, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.56393, "track.frame_4_loss_bbox_2": 1.08442, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.53364, "track.frame_4_loss_bbox_3": 1.09866, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.51797, "track.frame_4_loss_bbox_4": 1.10088, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.52043, "track.frame_4_loss_bbox_5": 1.10262, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.9306, "map.loss_bbox": 1.90658, "map.loss_iou": 1.9425, "map.loss_mask_things": 1.66586, "map.loss_mask_stuff": 0.04677, "map.d0.loss_mask_things_f": 1.69812, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.68005, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.6679, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.6777, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.04563, "map.d0.loss_cls_stuff_f": 0.00017, "map.d1.loss_mask_stuff_f": 0.0467, "map.d1.loss_cls_stuff_f": 0.00021, "map.d2.loss_mask_stuff_f": 0.04573, "map.d2.loss_cls_stuff_f": 0.00031, "map.d3.loss_mask_stuff_f": 0.04762, "map.d3.loss_cls_stuff_f": 0.00028, "map.d4.loss_mask_stuff_f": 0.04651, "map.d4.loss_cls_stuff_f": 0.00021, "map.d5.loss_mask_stuff_f": 0.04904, "map.d5.loss_cls_stuff_f": 0.0002, "map.d0.loss_cls": 0.89173, "map.d0.loss_bbox": 1.99978, "map.d0.loss_iou": 2.07451, "map.d1.loss_cls": 0.87547, "map.d1.loss_bbox": 1.95989, "map.d1.loss_iou": 2.02742, "map.d2.loss_cls": 0.89668, "map.d2.loss_bbox": 1.94088, "map.d2.loss_iou": 1.98843, "map.d3.loss_cls": 0.93684, "map.d3.loss_bbox": 1.90867, "map.d3.loss_iou": 1.96358, "map.d4.loss_cls": 0.9145, "map.d4.loss_bbox": 1.9161, "map.d4.loss_iou": 1.94996, "loss": 87.86531, "grad_norm": 569.36481, "time": 16.85892}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 9e-05, "memory": 49444, "data_time": 0.11523, "track.frame_0_loss_cls_0": 0.48405, "track.frame_0_loss_bbox_0": 0.99467, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.47735, "track.frame_0_loss_bbox_1": 0.85457, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.44974, "track.frame_0_loss_bbox_2": 0.84273, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.41905, "track.frame_0_loss_bbox_3": 0.85327, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.42618, "track.frame_0_loss_bbox_4": 0.85049, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.42696, "track.frame_0_loss_bbox_5": 0.86048, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.44367, "track.frame_1_loss_bbox_0": 1.00249, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.43516, "track.frame_1_loss_bbox_1": 0.89701, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.43536, "track.frame_1_loss_bbox_2": 0.84241, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.42102, "track.frame_1_loss_bbox_3": 0.83297, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.41175, "track.frame_1_loss_bbox_4": 0.83149, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.42058, "track.frame_1_loss_bbox_5": 0.83818, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.43314, "track.frame_2_loss_bbox_0": 0.89764, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.4274, "track.frame_2_loss_bbox_1": 0.81684, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.40023, "track.frame_2_loss_bbox_2": 0.78959, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.38012, "track.frame_2_loss_bbox_3": 0.78566, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.37525, "track.frame_2_loss_bbox_4": 0.77835, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.3786, "track.frame_2_loss_bbox_5": 0.78273, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.42676, "track.frame_3_loss_bbox_0": 0.88396, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.42281, "track.frame_3_loss_bbox_1": 0.81296, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.40422, "track.frame_3_loss_bbox_2": 0.78811, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.36928, "track.frame_3_loss_bbox_3": 0.79171, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.36397, "track.frame_3_loss_bbox_4": 0.77949, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.35941, "track.frame_3_loss_bbox_5": 0.78319, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.4519, "track.frame_4_loss_bbox_0": 1.60705, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.42677, "track.frame_4_loss_bbox_1": 1.54875, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.41771, "track.frame_4_loss_bbox_2": 1.53767, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.41179, "track.frame_4_loss_bbox_3": 1.53496, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.42266, "track.frame_4_loss_bbox_4": 1.54279, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.42136, "track.frame_4_loss_bbox_5": 1.53739, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.866, "map.loss_bbox": 1.67564, "map.loss_iou": 1.96556, "map.loss_mask_things": 1.73231, "map.loss_mask_stuff": 0.04066, "map.d0.loss_mask_things_f": 1.77189, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.75129, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.73435, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.74003, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.03747, "map.d0.loss_cls_stuff_f": 0.00013, "map.d1.loss_mask_stuff_f": 0.03914, "map.d1.loss_cls_stuff_f": 0.00014, "map.d2.loss_mask_stuff_f": 0.0369, "map.d2.loss_cls_stuff_f": 0.00024, "map.d3.loss_mask_stuff_f": 0.03697, "map.d3.loss_cls_stuff_f": 0.00016, "map.d4.loss_mask_stuff_f": 0.03879, "map.d4.loss_cls_stuff_f": 0.00012, "map.d5.loss_mask_stuff_f": 0.04198, "map.d5.loss_cls_stuff_f": 0.00012, "map.d0.loss_cls": 0.8117, "map.d0.loss_bbox": 1.68562, "map.d0.loss_iou": 2.05005, "map.d1.loss_cls": 0.76683, "map.d1.loss_bbox": 1.68287, "map.d1.loss_iou": 2.01388, "map.d2.loss_cls": 0.82726, "map.d2.loss_bbox": 1.66476, "map.d2.loss_iou": 1.98529, "map.d3.loss_cls": 0.86147, "map.d3.loss_bbox": 1.67924, "map.d3.loss_iou": 1.97029, "map.d4.loss_cls": 0.86384, "map.d4.loss_bbox": 1.67043, "map.d4.loss_iou": 1.97071, "loss": 78.05801, "grad_norm": 332.00398, "time": 16.78189}
