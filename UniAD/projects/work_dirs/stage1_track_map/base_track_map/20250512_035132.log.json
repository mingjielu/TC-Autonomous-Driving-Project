{"env_info": "sys.platform: linux\nPython: 3.10.15 (main, Oct  3 2024, 07:27:34) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1: AMD Radeon Graphics\nCUDA_HOME: /opt/rocm\nNVCC: Not Available\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 2.7.0a0+git6374332\nPyTorch compiling details: PyTorch built with:\n  - GCC 11.4\n  - C++ Version: 201703\n  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - HIP Runtime 6.3.42131\n  - MIOpen 3.3.0\n  - Magma 2.7.2\n  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, COMMIT_SHA=6374332d33953766af2359a66027dc4f90c66e07, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=1 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=range-loop-construct -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.7.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.22.0a0+867521e\nOpenCV: 4.11.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 11.4\nMMCV CUDA Compiler: 60342131\nMMDetection: 2.26.0\nMMSegmentation: 0.25.0\nMMDetection3D: 1.0.0rc4+\nspconv2.0: False", "config": "point_cloud_range = [-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesE2EDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=False,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=True)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=True,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='ObjectRangeFilterTrack',\n        point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n    dict(\n        type='ObjectNameFilterTrack',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='CustomCollect3D',\n        keys=[\n            'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img', 'timestamp',\n            'l2g_r_mat', 'l2g_t', 'gt_fut_traj', 'gt_fut_traj_mask',\n            'gt_past_traj', 'gt_past_traj_mask', 'gt_sdc_bbox', 'gt_sdc_label',\n            'gt_sdc_fut_traj', 'gt_sdc_fut_traj_mask', 'gt_lane_labels',\n            'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n            'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n            'gt_occ_img_is_valid', 'gt_future_boxes', 'gt_future_labels',\n            'sdc_planning', 'sdc_planning_mask', 'command'\n        ])\n]\ntest_pipeline = [\n    dict(\n        type='LoadMultiViewImageFromFilesInCeph',\n        to_float32=True,\n        file_client_args=dict(backend='disk'),\n        img_root='data/nuscenes/'),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='LoadAnnotations3D_E2E',\n        with_bbox_3d=False,\n        with_label_3d=False,\n        with_attr_label=False,\n        with_future_anns=True,\n        with_ins_inds_3d=False,\n        ins_inds_add_1=True),\n    dict(\n        type='GenerateOccFlowLabels',\n        grid_conf=dict(\n            xbound=[-50.0, 50.0, 0.5],\n            ybound=[-50.0, 50.0, 0.5],\n            zbound=[-10.0, 10.0, 20.0]),\n        ignore_index=255,\n        only_vehicle=True,\n        filter_invisible=False),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1600, 900),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'img', 'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_lane_labels',\n                    'gt_lane_bboxes', 'gt_lane_masks', 'gt_segmentation',\n                    'gt_instance', 'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=10,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=8,\n    train=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=True,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='ObjectRangeFilterTrack',\n                point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n            dict(\n                type='ObjectNameFilterTrack',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='CustomCollect3D',\n                keys=[\n                    'gt_bboxes_3d', 'gt_labels_3d', 'gt_inds', 'img',\n                    'timestamp', 'l2g_r_mat', 'l2g_t', 'gt_fut_traj',\n                    'gt_fut_traj_mask', 'gt_past_traj', 'gt_past_traj_mask',\n                    'gt_sdc_bbox', 'gt_sdc_label', 'gt_sdc_fut_traj',\n                    'gt_sdc_fut_traj_mask', 'gt_lane_labels', 'gt_lane_bboxes',\n                    'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                    'gt_centerness', 'gt_offset', 'gt_flow',\n                    'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                    'gt_occ_img_is_valid', 'gt_future_boxes',\n                    'gt_future_labels', 'sdc_planning', 'sdc_planning_mask',\n                    'command'\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        use_valid_flag=True,\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        queue_length=5,\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    val=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        use_nonlinear_optimizer=True,\n        samples_per_gpu=1,\n        eval_mod=['det', 'track', 'map'],\n        occ_receptive_field=3,\n        occ_n_future=6,\n        occ_filter_invalid_sample=False),\n    test=dict(\n        type='NuScenesE2EDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/infos/nuscenes_infos_temporal_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadMultiViewImageFromFilesInCeph',\n                to_float32=True,\n                file_client_args=dict(backend='disk'),\n                img_root='data/nuscenes/'),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='LoadAnnotations3D_E2E',\n                with_bbox_3d=False,\n                with_label_3d=False,\n                with_attr_label=False,\n                with_future_anns=True,\n                with_ins_inds_3d=False,\n                ins_inds_add_1=True),\n            dict(\n                type='GenerateOccFlowLabels',\n                grid_conf=dict(\n                    xbound=[-50.0, 50.0, 0.5],\n                    ybound=[-50.0, 50.0, 0.5],\n                    zbound=[-10.0, 10.0, 20.0]),\n                ignore_index=255,\n                only_vehicle=True,\n                filter_invisible=False),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1600, 900),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='CustomCollect3D',\n                        keys=[\n                            'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                            'gt_lane_labels', 'gt_lane_bboxes',\n                            'gt_lane_masks', 'gt_segmentation', 'gt_instance',\n                            'gt_centerness', 'gt_offset', 'gt_flow',\n                            'gt_backward_flow', 'gt_occ_has_invalid_frame',\n                            'gt_occ_img_is_valid', 'sdc_planning',\n                            'sdc_planning_mask', 'command'\n                        ])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=False,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=True),\n        test_mode=True,\n        box_type_3d='LiDAR',\n        file_client_args=dict(backend='disk'),\n        patch_size=[102.4, 102.4],\n        canvas_size=(200, 200),\n        bev_size=(200, 200),\n        predict_steps=12,\n        past_steps=4,\n        fut_steps=4,\n        occ_n_future=6,\n        use_nonlinear_optimizer=True,\n        eval_mod=['det', 'map', 'track']),\n    shuffler_sampler=dict(type='DistributedGroupSampler'),\n    nonshuffler_sampler=dict(type='DistributedSampler'))\nevaluation = dict(\n    interval=6,\n    pipeline=[\n        dict(\n            type='LoadMultiViewImageFromFilesInCeph',\n            to_float32=True,\n            file_client_args=dict(backend='disk'),\n            img_root='data/nuscenes/'),\n        dict(\n            type='NormalizeMultiviewImage',\n            mean=[103.53, 116.28, 123.675],\n            std=[1.0, 1.0, 1.0],\n            to_rgb=False),\n        dict(type='PadMultiViewImage', size_divisor=32),\n        dict(\n            type='LoadAnnotations3D_E2E',\n            with_bbox_3d=False,\n            with_label_3d=False,\n            with_attr_label=False,\n            with_future_anns=True,\n            with_ins_inds_3d=False,\n            ins_inds_add_1=True),\n        dict(\n            type='GenerateOccFlowLabels',\n            grid_conf=dict(\n                xbound=[-50.0, 50.0, 0.5],\n                ybound=[-50.0, 50.0, 0.5],\n                zbound=[-10.0, 10.0, 20.0]),\n            ignore_index=255,\n            only_vehicle=True,\n            filter_invisible=False),\n        dict(\n            type='MultiScaleFlipAug3D',\n            img_scale=(1600, 900),\n            pts_scale_ratio=1,\n            flip=False,\n            transforms=[\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ],\n                    with_label=False),\n                dict(\n                    type='CustomCollect3D',\n                    keys=[\n                        'img', 'timestamp', 'l2g_r_mat', 'l2g_t',\n                        'gt_lane_labels', 'gt_lane_bboxes', 'gt_lane_masks',\n                        'gt_segmentation', 'gt_instance', 'gt_centerness',\n                        'gt_offset', 'gt_flow', 'gt_backward_flow',\n                        'gt_occ_has_invalid_frame', 'gt_occ_img_is_valid',\n                        'sdc_planning', 'sdc_planning_mask', 'command'\n                    ])\n            ])\n    ],\n    planning_evaluation_strategy='uniad')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=10,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './projects/work_dirs/stage1_track_map/base_track_map/'\nload_from = 'ckpts/bevformer_r101_dcn_24ep.pth'\nresume_from = None\nworkflow = [('train', 1)]\nplugin = True\nplugin_dir = 'projects/mmdet3d_plugin/'\nvoxel_size = [0.2, 0.2, 8]\npatch_size = [102.4, 102.4]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\n_dim_ = 256\n_pos_dim_ = 128\n_ffn_dim_ = 512\n_num_levels_ = 4\nbev_h_ = 200\nbev_w_ = 200\n_feed_dim_ = 512\n_dim_half_ = 128\ncanvas_size = (200, 200)\nqueue_length = 5\npredict_steps = 12\npredict_modes = 6\nfut_steps = 4\npast_steps = 4\nuse_nonlinear_optimizer = True\nocc_n_future = 4\nocc_n_future_plan = 6\nocc_n_future_max = 6\nplanning_steps = 6\nuse_col_optim = True\nplanning_evaluation_strategy = 'uniad'\noccflow_grid_conf = dict(\n    xbound=[-50.0, 50.0, 0.5],\n    ybound=[-50.0, 50.0, 0.5],\n    zbound=[-10.0, 10.0, 20.0])\ntrain_gt_iou_threshold = 0.3\nmodel = dict(\n    type='UniAD',\n    gt_iou_threshold=0.3,\n    queue_length=5,\n    use_grid_mask=True,\n    video_test_mode=True,\n    num_query=900,\n    num_classes=10,\n    pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(1, 2, 3),\n        frozen_stages=4,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[512, 1024, 2048],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    freeze_img_backbone=True,\n    freeze_img_neck=False,\n    freeze_bn=False,\n    score_thresh=0.4,\n    filter_score_thresh=0.35,\n    qim_args=dict(\n        qim_type='QIMBase',\n        merger_dropout=0,\n        update_query_pos=True,\n        fp_ratio=0.3,\n        random_drop=0.1),\n    mem_args=dict(\n        memory_bank_type='MemoryBank',\n        memory_bank_score_thresh=0.0,\n        memory_bank_len=4),\n    loss_cfg=dict(\n        type='ClipMatcher',\n        num_classes=10,\n        weight_dict=None,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        assigner=dict(\n            type='HungarianAssigner3DTrack',\n            cls_cost=dict(type='FocalLossCost', weight=2.0),\n            reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_past_traj_weight=0.0),\n    pts_bbox_head=dict(\n        type='BEVFormerTrackHead',\n        bev_h=200,\n        bev_w=200,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        past_steps=4,\n        fut_steps=4,\n        transformer=dict(\n            type='PerceptionTransformer',\n            rotate_prev_bev=True,\n            use_shift=True,\n            use_can_bus=True,\n            embed_dims=256,\n            encoder=dict(\n                type='BEVFormerEncoder',\n                num_layers=6,\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                num_points_in_pillar=4,\n                return_intermediate=False,\n                transformerlayers=dict(\n                    type='BEVFormerLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='TemporalSelfAttention',\n                            embed_dims=256,\n                            num_levels=1),\n                        dict(\n                            type='SpatialCrossAttention',\n                            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n                            deformable_attention=dict(\n                                type='MSDeformableAttention3D',\n                                embed_dims=256,\n                                num_points=8,\n                                num_levels=4),\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm'))),\n            decoder=dict(\n                type='DetectionTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='CustomMSDeformableAttention',\n                            embed_dims=256,\n                            num_levels=1)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        bbox_coder=dict(\n            type='NMSFreeCoder',\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            max_num=300,\n            voxel_size=[0.2, 0.2, 8],\n            num_classes=10),\n        positional_encoding=dict(\n            type='LearnedPositionalEncoding',\n            num_feats=128,\n            row_num_embed=200,\n            col_num_embed=200),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0.0)),\n    seg_head=dict(\n        type='PansegformerHead',\n        bev_h=200,\n        bev_w=200,\n        canvas_size=(200, 200),\n        pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n        num_query=300,\n        num_classes=4,\n        num_things_classes=3,\n        num_stuff_classes=1,\n        in_channels=2048,\n        sync_cls_avg_factor=True,\n        as_two_stage=False,\n        with_box_refine=True,\n        transformer=dict(\n            type='SegDeformableTransformer',\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_levels=4),\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),\n            decoder=dict(\n                type='DeformableDetrTransformerDecoder',\n                num_layers=6,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='MultiScaleDeformableAttention',\n                            embed_dims=256,\n                            num_levels=4)\n                    ],\n                    feedforward_channels=512,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n        loss_iou=dict(type='GIoULoss', loss_weight=2.0),\n        loss_mask=dict(type='DiceLoss', loss_weight=2.0),\n        thing_transformer_head=dict(\n            type='SegMaskHead', d_model=256, nhead=8, num_decoder_layers=4),\n        stuff_transformer_head=dict(\n            type='SegMaskHead',\n            d_model=256,\n            nhead=8,\n            num_decoder_layers=6,\n            self_attn=True),\n        train_cfg=dict(\n            assigner=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            assigner_with_mask=dict(\n                type='HungarianAssigner_multi_info',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0),\n                mask_cost=dict(type='DiceCost', weight=2.0)),\n            sampler=dict(type='PseudoSampler'),\n            sampler_with_mask=dict(type='PseudoSampler_segformer'))),\n    train_cfg=dict(\n        pts=dict(\n            grid_size=[512, 512, 1],\n            voxel_size=[0.2, 0.2, 8],\n            point_cloud_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0],\n            out_size_factor=4,\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0.0),\n                pc_range=[-51.2, -51.2, -5.0, 51.2, 51.2, 3.0]))))\ninfo_root = 'data/infos/'\nann_file_train = 'data/infos/nuscenes_infos_temporal_train.pkl'\nann_file_val = 'data/infos/nuscenes_infos_temporal_val.pkl'\nann_file_test = 'data/infos/nuscenes_infos_temporal_val.pkl'\noptimizer = dict(\n    type='AdamW',\n    lr=0.0002,\n    paramwise_cfg=dict(custom_keys=dict(img_backbone=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ntotal_epochs = 6\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\nfind_unused_parameters = True\ngpu_ids = range(0, 2)\n", "seed": 0, "exp_name": "base_track_map.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 7e-05, "memory": 47028, "data_time": 0.99951, "track.frame_0_loss_cls_0": 1.05416, "track.frame_0_loss_bbox_0": 1.90211, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 1.00903, "track.frame_0_loss_bbox_1": 1.84856, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 1.01352, "track.frame_0_loss_bbox_2": 1.83898, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 1.00474, "track.frame_0_loss_bbox_3": 1.83035, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.95479, "track.frame_0_loss_bbox_4": 1.81634, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.98705, "track.frame_0_loss_bbox_5": 1.81158, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 1.30217, "track.frame_1_loss_bbox_0": 1.81129, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 1.30886, "track.frame_1_loss_bbox_1": 1.75161, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 1.33887, "track.frame_1_loss_bbox_2": 1.72781, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 1.26478, "track.frame_1_loss_bbox_3": 1.6991, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 1.25093, "track.frame_1_loss_bbox_4": 1.70187, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 1.2607, "track.frame_1_loss_bbox_5": 1.70052, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 1.49207, "track.frame_2_loss_bbox_0": 1.79826, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 1.37251, "track.frame_2_loss_bbox_1": 1.69921, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 1.41002, "track.frame_2_loss_bbox_2": 1.6718, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 1.37679, "track.frame_2_loss_bbox_3": 1.66978, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 1.31643, "track.frame_2_loss_bbox_4": 1.66533, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 1.3318, "track.frame_2_loss_bbox_5": 1.66622, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 1.60061, "track.frame_3_loss_bbox_0": 1.75379, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 1.38777, "track.frame_3_loss_bbox_1": 1.65872, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 1.35632, "track.frame_3_loss_bbox_2": 1.60842, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 1.29475, "track.frame_3_loss_bbox_3": 1.62142, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 1.29496, "track.frame_3_loss_bbox_4": 1.64294, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 1.32644, "track.frame_3_loss_bbox_5": 1.65508, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 1.59094, "track.frame_4_loss_bbox_0": 1.71293, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 1.4057, "track.frame_4_loss_bbox_1": 1.61259, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 1.36049, "track.frame_4_loss_bbox_2": 1.59508, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 1.29533, "track.frame_4_loss_bbox_3": 1.57906, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 1.24677, "track.frame_4_loss_bbox_4": 1.571, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 1.27043, "track.frame_4_loss_bbox_5": 1.56555, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 1.22092, "map.loss_bbox": 1.78101, "map.loss_iou": 2.05093, "map.loss_mask_things": 1.79715, "map.loss_mask_stuff": 0.08848, "map.d0.loss_mask_things_f": 1.80655, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.79037, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.7845, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.79048, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.08491, "map.d0.loss_cls_stuff_f": 0.12586, "map.d1.loss_mask_stuff_f": 0.11376, "map.d1.loss_cls_stuff_f": 0.12139, "map.d2.loss_mask_stuff_f": 0.07871, "map.d2.loss_cls_stuff_f": 0.11891, "map.d3.loss_mask_stuff_f": 0.08763, "map.d3.loss_cls_stuff_f": 0.10548, "map.d4.loss_mask_stuff_f": 0.08451, "map.d4.loss_cls_stuff_f": 0.12411, "map.d5.loss_mask_stuff_f": 0.09153, "map.d5.loss_cls_stuff_f": 0.13793, "map.d0.loss_cls": 1.68269, "map.d0.loss_bbox": 1.82575, "map.d0.loss_iou": 2.07811, "map.d1.loss_cls": 1.52662, "map.d1.loss_bbox": 1.80803, "map.d1.loss_iou": 2.06683, "map.d2.loss_cls": 1.25698, "map.d2.loss_bbox": 1.79636, "map.d2.loss_iou": 2.05799, "map.d3.loss_cls": 1.22977, "map.d3.loss_bbox": 1.78803, "map.d3.loss_iou": 2.05494, "map.d4.loss_cls": 1.25192, "map.d4.loss_bbox": 1.78417, "map.d4.loss_iou": 2.05247, "loss": 131.31278, "grad_norm": 1259.53279, "time": 11.65562}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 7e-05, "memory": 47297, "data_time": 0.09237, "track.frame_0_loss_cls_0": 0.64684, "track.frame_0_loss_bbox_0": 1.62526, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.63968, "track.frame_0_loss_bbox_1": 1.55271, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.63338, "track.frame_0_loss_bbox_2": 1.50161, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.61825, "track.frame_0_loss_bbox_3": 1.48204, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.61788, "track.frame_0_loss_bbox_4": 1.46252, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.6226, "track.frame_0_loss_bbox_5": 1.45488, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.68806, "track.frame_1_loss_bbox_0": 1.59795, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.63811, "track.frame_1_loss_bbox_1": 1.53308, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.64639, "track.frame_1_loss_bbox_2": 1.47246, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.641, "track.frame_1_loss_bbox_3": 1.4643, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.64629, "track.frame_1_loss_bbox_4": 1.44063, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.65262, "track.frame_1_loss_bbox_5": 1.42982, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.66797, "track.frame_2_loss_bbox_0": 1.6611, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.64758, "track.frame_2_loss_bbox_1": 1.59891, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.63651, "track.frame_2_loss_bbox_2": 1.54722, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.63588, "track.frame_2_loss_bbox_3": 1.53432, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.6417, "track.frame_2_loss_bbox_4": 1.51488, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.63671, "track.frame_2_loss_bbox_5": 1.51374, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.64277, "track.frame_3_loss_bbox_0": 1.61261, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.60892, "track.frame_3_loss_bbox_1": 1.52507, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.60191, "track.frame_3_loss_bbox_2": 1.47982, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.59025, "track.frame_3_loss_bbox_3": 1.47227, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.59825, "track.frame_3_loss_bbox_4": 1.45325, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.60439, "track.frame_3_loss_bbox_5": 1.45149, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.63803, "track.frame_4_loss_bbox_0": 1.62853, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.62229, "track.frame_4_loss_bbox_1": 1.56162, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.61147, "track.frame_4_loss_bbox_2": 1.5111, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.61292, "track.frame_4_loss_bbox_3": 1.49687, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.61871, "track.frame_4_loss_bbox_4": 1.47776, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.6264, "track.frame_4_loss_bbox_5": 1.46946, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.90345, "map.loss_bbox": 1.85997, "map.loss_iou": 2.041, "map.loss_mask_things": 1.7743, "map.loss_mask_stuff": 0.05227, "map.d0.loss_mask_things_f": 1.79757, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.78057, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.75791, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.76483, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05303, "map.d0.loss_cls_stuff_f": 0.00193, "map.d1.loss_mask_stuff_f": 0.05632, "map.d1.loss_cls_stuff_f": 0.00084, "map.d2.loss_mask_stuff_f": 0.04977, "map.d2.loss_cls_stuff_f": 0.00055, "map.d3.loss_mask_stuff_f": 0.05252, "map.d3.loss_cls_stuff_f": 0.00034, "map.d4.loss_mask_stuff_f": 0.05351, "map.d4.loss_cls_stuff_f": 0.00046, "map.d5.loss_mask_stuff_f": 0.05201, "map.d5.loss_cls_stuff_f": 0.0005, "map.d0.loss_cls": 1.38838, "map.d0.loss_bbox": 1.93255, "map.d0.loss_iou": 2.09494, "map.d1.loss_cls": 0.9812, "map.d1.loss_bbox": 1.91218, "map.d1.loss_iou": 2.08543, "map.d2.loss_cls": 0.87955, "map.d2.loss_bbox": 1.88431, "map.d2.loss_iou": 2.06899, "map.d3.loss_cls": 0.8782, "map.d3.loss_bbox": 1.87103, "map.d3.loss_iou": 2.05894, "map.d4.loss_cls": 0.90874, "map.d4.loss_bbox": 1.86582, "map.d4.loss_iou": 2.05112, "loss": 103.37604, "grad_norm": 190.19661, "time": 10.49887}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 7e-05, "memory": 47297, "data_time": 0.08839, "track.frame_0_loss_cls_0": 0.5383, "track.frame_0_loss_bbox_0": 1.43301, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.54266, "track.frame_0_loss_bbox_1": 1.33658, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.54131, "track.frame_0_loss_bbox_2": 1.29989, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.53386, "track.frame_0_loss_bbox_3": 1.27851, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.54252, "track.frame_0_loss_bbox_4": 1.26288, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.54856, "track.frame_0_loss_bbox_5": 1.26706, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.54842, "track.frame_1_loss_bbox_0": 1.3611, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.5445, "track.frame_1_loss_bbox_1": 1.28386, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.54218, "track.frame_1_loss_bbox_2": 1.24133, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.53631, "track.frame_1_loss_bbox_3": 1.21979, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.54072, "track.frame_1_loss_bbox_4": 1.206, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.54245, "track.frame_1_loss_bbox_5": 1.19868, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.57871, "track.frame_2_loss_bbox_0": 1.4563, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.57724, "track.frame_2_loss_bbox_1": 1.3529, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.57006, "track.frame_2_loss_bbox_2": 1.31762, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.55909, "track.frame_2_loss_bbox_3": 1.29841, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.55005, "track.frame_2_loss_bbox_4": 1.2844, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.55449, "track.frame_2_loss_bbox_5": 1.27345, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.52946, "track.frame_3_loss_bbox_0": 1.33287, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.53543, "track.frame_3_loss_bbox_1": 1.2419, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.53241, "track.frame_3_loss_bbox_2": 1.19937, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.51991, "track.frame_3_loss_bbox_3": 1.1844, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.51817, "track.frame_3_loss_bbox_4": 1.1699, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.52266, "track.frame_3_loss_bbox_5": 1.16799, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.54294, "track.frame_4_loss_bbox_0": 1.28984, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.53428, "track.frame_4_loss_bbox_1": 1.19742, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.52819, "track.frame_4_loss_bbox_2": 1.16367, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.5228, "track.frame_4_loss_bbox_3": 1.13846, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.51592, "track.frame_4_loss_bbox_4": 1.12989, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.5111, "track.frame_4_loss_bbox_5": 1.12649, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.90141, "map.loss_bbox": 1.93416, "map.loss_iou": 2.00121, "map.loss_mask_things": 1.71503, "map.loss_mask_stuff": 0.05103, "map.d0.loss_mask_things_f": 1.7466, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.74076, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.73659, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.75831, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.04965, "map.d0.loss_cls_stuff_f": 0.00015, "map.d1.loss_mask_stuff_f": 0.04843, "map.d1.loss_cls_stuff_f": 0.0001, "map.d2.loss_mask_stuff_f": 0.04566, "map.d2.loss_cls_stuff_f": 9e-05, "map.d3.loss_mask_stuff_f": 0.04857, "map.d3.loss_cls_stuff_f": 0.0001, "map.d4.loss_mask_stuff_f": 0.04807, "map.d4.loss_cls_stuff_f": 0.0001, "map.d5.loss_mask_stuff_f": 0.04806, "map.d5.loss_cls_stuff_f": 0.00013, "map.d0.loss_cls": 1.06449, "map.d0.loss_bbox": 2.01567, "map.d0.loss_iou": 2.0454, "map.d1.loss_cls": 0.86788, "map.d1.loss_bbox": 1.98561, "map.d1.loss_iou": 2.02968, "map.d2.loss_cls": 0.88235, "map.d2.loss_bbox": 1.95466, "map.d2.loss_iou": 2.01746, "map.d3.loss_cls": 0.88357, "map.d3.loss_bbox": 1.94594, "map.d3.loss_iou": 2.00628, "map.d4.loss_cls": 0.90042, "map.d4.loss_bbox": 1.94159, "map.d4.loss_iou": 1.99862, "loss": 92.3325, "grad_norm": 182.89368, "time": 15.57313}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 8e-05, "memory": 47297, "data_time": 0.09201, "track.frame_0_loss_cls_0": 0.52998, "track.frame_0_loss_bbox_0": 1.40722, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.53711, "track.frame_0_loss_bbox_1": 1.28661, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.51052, "track.frame_0_loss_bbox_2": 1.26376, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.49373, "track.frame_0_loss_bbox_3": 1.26175, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.50159, "track.frame_0_loss_bbox_4": 1.25059, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.51618, "track.frame_0_loss_bbox_5": 1.24441, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.50522, "track.frame_1_loss_bbox_0": 1.42364, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.493, "track.frame_1_loss_bbox_1": 1.29414, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.49202, "track.frame_1_loss_bbox_2": 1.25776, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.47289, "track.frame_1_loss_bbox_3": 1.24899, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.47545, "track.frame_1_loss_bbox_4": 1.23755, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.47659, "track.frame_1_loss_bbox_5": 1.23819, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.49102, "track.frame_2_loss_bbox_0": 1.29112, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.49114, "track.frame_2_loss_bbox_1": 1.1655, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.47083, "track.frame_2_loss_bbox_2": 1.13629, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.45134, "track.frame_2_loss_bbox_3": 1.13749, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.45512, "track.frame_2_loss_bbox_4": 1.13068, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.46276, "track.frame_2_loss_bbox_5": 1.12856, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.48378, "track.frame_3_loss_bbox_0": 1.21406, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.47313, "track.frame_3_loss_bbox_1": 1.1153, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.45319, "track.frame_3_loss_bbox_2": 1.09298, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.44215, "track.frame_3_loss_bbox_3": 1.08432, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.42036, "track.frame_3_loss_bbox_4": 1.08666, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.41374, "track.frame_3_loss_bbox_5": 1.08724, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.4813, "track.frame_4_loss_bbox_0": 1.33243, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.48229, "track.frame_4_loss_bbox_1": 1.208, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.45955, "track.frame_4_loss_bbox_2": 1.1784, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.45695, "track.frame_4_loss_bbox_3": 1.16564, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.44335, "track.frame_4_loss_bbox_4": 1.16284, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.44997, "track.frame_4_loss_bbox_5": 1.15638, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.9132, "map.loss_bbox": 1.9339, "map.loss_iou": 1.94904, "map.loss_mask_things": 1.68001, "map.loss_mask_stuff": 0.06022, "map.d0.loss_mask_things_f": 1.72365, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.74443, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69156, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70453, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.05895, "map.d0.loss_cls_stuff_f": 0.00015, "map.d1.loss_mask_stuff_f": 0.05982, "map.d1.loss_cls_stuff_f": 0.00011, "map.d2.loss_mask_stuff_f": 0.05475, "map.d2.loss_cls_stuff_f": 9e-05, "map.d3.loss_mask_stuff_f": 0.06056, "map.d3.loss_cls_stuff_f": 0.00011, "map.d4.loss_mask_stuff_f": 0.05738, "map.d4.loss_cls_stuff_f": 0.00011, "map.d5.loss_mask_stuff_f": 0.05688, "map.d5.loss_cls_stuff_f": 0.00013, "map.d0.loss_cls": 0.87416, "map.d0.loss_bbox": 2.02134, "map.d0.loss_iou": 2.03172, "map.d1.loss_cls": 0.84494, "map.d1.loss_bbox": 1.98485, "map.d1.loss_iou": 2.00634, "map.d2.loss_cls": 0.86517, "map.d2.loss_bbox": 1.96056, "map.d2.loss_iou": 1.98597, "map.d3.loss_cls": 0.89183, "map.d3.loss_bbox": 1.94753, "map.d3.loss_iou": 1.97221, "map.d4.loss_cls": 0.89933, "map.d4.loss_bbox": 1.9366, "map.d4.loss_iou": 1.96223, "loss": 88.50911, "grad_norm": 201.7869, "time": 17.68947}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 8e-05, "memory": 47297, "data_time": 0.13586, "track.frame_0_loss_cls_0": 0.5498, "track.frame_0_loss_bbox_0": 1.2724, "track.frame_0_loss_past_trajs_0": 0.0, "track.frame_0_loss_cls_1": 0.54787, "track.frame_0_loss_bbox_1": 1.11716, "track.frame_0_loss_past_trajs_1": 0.0, "track.frame_0_loss_cls_2": 0.53175, "track.frame_0_loss_bbox_2": 1.0775, "track.frame_0_loss_past_trajs_2": 0.0, "track.frame_0_loss_cls_3": 0.50618, "track.frame_0_loss_bbox_3": 1.06758, "track.frame_0_loss_past_trajs_3": 0.0, "track.frame_0_loss_cls_4": 0.51204, "track.frame_0_loss_bbox_4": 1.05913, "track.frame_0_loss_past_trajs_4": 0.0, "track.frame_0_loss_cls_5": 0.51322, "track.frame_0_loss_bbox_5": 1.0689, "track.frame_0_loss_past_trajs_5": 0.0, "track.frame_1_loss_cls_0": 0.47056, "track.frame_1_loss_bbox_0": 1.26828, "track.frame_1_loss_past_trajs_0": 0.0, "track.frame_1_loss_cls_1": 0.48057, "track.frame_1_loss_bbox_1": 1.0734, "track.frame_1_loss_past_trajs_1": 0.0, "track.frame_1_loss_cls_2": 0.46033, "track.frame_1_loss_bbox_2": 1.03624, "track.frame_1_loss_past_trajs_2": 0.0, "track.frame_1_loss_cls_3": 0.43985, "track.frame_1_loss_bbox_3": 1.02616, "track.frame_1_loss_past_trajs_3": 0.0, "track.frame_1_loss_cls_4": 0.44178, "track.frame_1_loss_bbox_4": 1.03279, "track.frame_1_loss_past_trajs_4": 0.0, "track.frame_1_loss_cls_5": 0.44876, "track.frame_1_loss_bbox_5": 1.03592, "track.frame_1_loss_past_trajs_5": 0.0, "track.frame_2_loss_cls_0": 0.48596, "track.frame_2_loss_bbox_0": 1.29482, "track.frame_2_loss_past_trajs_0": 0.0, "track.frame_2_loss_cls_1": 0.48373, "track.frame_2_loss_bbox_1": 1.13583, "track.frame_2_loss_past_trajs_1": 0.0, "track.frame_2_loss_cls_2": 0.464, "track.frame_2_loss_bbox_2": 1.0907, "track.frame_2_loss_past_trajs_2": 0.0, "track.frame_2_loss_cls_3": 0.45308, "track.frame_2_loss_bbox_3": 1.06502, "track.frame_2_loss_past_trajs_3": 0.0, "track.frame_2_loss_cls_4": 0.45381, "track.frame_2_loss_bbox_4": 1.05849, "track.frame_2_loss_past_trajs_4": 0.0, "track.frame_2_loss_cls_5": 0.46659, "track.frame_2_loss_bbox_5": 1.04857, "track.frame_2_loss_past_trajs_5": 0.0, "track.frame_3_loss_cls_0": 0.49162, "track.frame_3_loss_bbox_0": 1.2618, "track.frame_3_loss_past_trajs_0": 0.0, "track.frame_3_loss_cls_1": 0.47373, "track.frame_3_loss_bbox_1": 1.08815, "track.frame_3_loss_past_trajs_1": 0.0, "track.frame_3_loss_cls_2": 0.46327, "track.frame_3_loss_bbox_2": 1.0458, "track.frame_3_loss_past_trajs_2": 0.0, "track.frame_3_loss_cls_3": 0.45652, "track.frame_3_loss_bbox_3": 1.04037, "track.frame_3_loss_past_trajs_3": 0.0, "track.frame_3_loss_cls_4": 0.4455, "track.frame_3_loss_bbox_4": 1.03355, "track.frame_3_loss_past_trajs_4": 0.0, "track.frame_3_loss_cls_5": 0.45755, "track.frame_3_loss_bbox_5": 1.02482, "track.frame_3_loss_past_trajs_5": 0.0, "track.frame_4_loss_cls_0": 0.47613, "track.frame_4_loss_bbox_0": 1.31762, "track.frame_4_loss_past_trajs_0": 0.0, "track.frame_4_loss_cls_1": 0.46517, "track.frame_4_loss_bbox_1": 1.13509, "track.frame_4_loss_past_trajs_1": 0.0, "track.frame_4_loss_cls_2": 0.4351, "track.frame_4_loss_bbox_2": 1.09439, "track.frame_4_loss_past_trajs_2": 0.0, "track.frame_4_loss_cls_3": 0.43363, "track.frame_4_loss_bbox_3": 1.08156, "track.frame_4_loss_past_trajs_3": 0.0, "track.frame_4_loss_cls_4": 0.43974, "track.frame_4_loss_bbox_4": 1.05443, "track.frame_4_loss_past_trajs_4": 0.0, "track.frame_4_loss_cls_5": 0.44529, "track.frame_4_loss_bbox_5": 1.04467, "track.frame_4_loss_past_trajs_5": 0.0, "map.loss_cls": 0.91799, "map.loss_bbox": 1.88541, "map.loss_iou": 1.90873, "map.loss_mask_things": 1.67861, "map.loss_mask_stuff": 0.04402, "map.d0.loss_mask_things_f": 1.71639, "map.d0.loss_iou_f": 0.0, "map.d0.loss_bbox_f": 0.0, "map.d0.loss_cls_f": 0.0, "map.d1.loss_mask_things_f": 1.71967, "map.d1.loss_iou_f": 0.0, "map.d1.loss_bbox_f": 0.0, "map.d1.loss_cls_f": 0.0, "map.d2.loss_mask_things_f": 1.69722, "map.d2.loss_iou_f": 0.0, "map.d2.loss_bbox_f": 0.0, "map.d2.loss_cls_f": 0.0, "map.d3.loss_mask_things_f": 1.70747, "map.d3.loss_iou_f": 0.0, "map.d3.loss_bbox_f": 0.0, "map.d3.loss_cls_f": 0.0, "map.d0.loss_mask_stuff_f": 0.04504, "map.d0.loss_cls_stuff_f": 0.00013, "map.d1.loss_mask_stuff_f": 0.04321, "map.d1.loss_cls_stuff_f": 0.00011, "map.d2.loss_mask_stuff_f": 0.0432, "map.d2.loss_cls_stuff_f": 0.0001, "map.d3.loss_mask_stuff_f": 0.04696, "map.d3.loss_cls_stuff_f": 0.00012, "map.d4.loss_mask_stuff_f": 0.04204, "map.d4.loss_cls_stuff_f": 0.0001, "map.d5.loss_mask_stuff_f": 0.04299, "map.d5.loss_cls_stuff_f": 0.00011, "map.d0.loss_cls": 0.82899, "map.d0.loss_bbox": 1.89265, "map.d0.loss_iou": 1.95955, "map.d1.loss_cls": 0.81722, "map.d1.loss_bbox": 1.86939, "map.d1.loss_iou": 1.92429, "map.d2.loss_cls": 0.83319, "map.d2.loss_bbox": 1.86188, "map.d2.loss_iou": 1.91181, "map.d3.loss_cls": 0.87403, "map.d3.loss_bbox": 1.86269, "map.d3.loss_iou": 1.90065, "map.d4.loss_cls": 0.89397, "map.d4.loss_bbox": 1.88036, "map.d4.loss_iou": 1.90367, "loss": 83.99818, "grad_norm": 204.85308, "time": 12.53726}
